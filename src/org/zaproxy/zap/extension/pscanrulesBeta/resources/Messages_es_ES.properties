#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

pscanbeta.desc=Passive Scan Rules - beta

pscanbeta.authenticationcredentialscaptured.name=Authentication Credentials Captured
pscanbeta.authenticationcredentialscaptured.desc=Mecanismo inseguro de autenticaci\u00f3n en uso.  Esto permite a un atacante obtener los credenciales (ID de usuario y contrase\u00f1a) de un usuario autenticado. Usando el metodo HTTP de autenticaci\u00f3n b\u00e1sica, el atacante simplemente debe vigilar el tr\u00e1fico de la red hasta que se reciba una solicitud de autenticaci\u00f3n b\u00e1sica, y luego descifrar (base64) los credenciales.  Usando el m\u00e9todo HTTP de autenticaci\u00f3n por compendio (hash), el atacante tiene acceso al nombre de usuario y posiblemente la contrase\u00f1a, si el hash (incluyendo la semilla criptogr\u00e1fica) puede ser resuelto o si se monta un ataque Hombre-en-el-Medio (Man-In-The-Middle).     
pscanbeta.authenticationcredentialscaptured.soln=Utilice HTTPS y un mecanismo de autenticaci\u00f3n segura que no transmita el ID de usuario o la contrase\u00f1a sin cifrarlos.  En particular, evite el uso del mecanismo HTTP de autenticaci\u00f3n b\u00e1sica ya que este utiliza un mecanismo de ofuscaci\u00f3n trivial, que se rompe f\u00e1cilmente. 
pscanbeta.authenticationcredentialscaptured.refs=https\://www.OWASP.org/index.php/Top_10_2010-a3\nhttps\://www.owasp.org/index.php/Testing_for_Brute_Force_%28OWASP-AT-004%29 https\://www.owasp.org/index.php/Category\:Authentication_Vulnerability\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanbeta.authenticationcredentialscaptured.alert.basicauth.extrainfo=[{0}] [{1}] utiliza el mecanismo de autenticaci\u00f3n inseguro [{2}], revelando el nombre de usuario [{3}] y contrase\u00f1a [{4}].
pscanbeta.authenticationcredentialscaptured.alert.digestauth.extrainfo=[{0}] [{1}] utiliza el mecanismo de autenticaci\u00f3n inseguro [{2}], revelando el nombre de usuario [{3}] e informaci\u00f3n adicional [{4}].
pscanbeta.authenticationcredentialscaptured.alert.attack=El atacante fisgonea en la red hasta capturar los credenciales de autenticaci\u00f3n de un usuario.

pscanbeta.charsetmismatch.name=Charset Mismatch
pscanbeta.charsetmismatch.variant.no_mismatch_metacontenttype_missing=(Meta Content-Type Charset Missing)
pscanbeta.charsetmismatch.variant.header_metacontentype_mismatch=(Header Versus Meta Content-Type Charset)
pscanbeta.charsetmismatch.variant.header_metacharset_mismatch=(Header Versus Meta Charset)
pscanbeta.charsetmismatch.variant.metacontenttype_metacharset_mismatch=(Meta Charset Versus Meta Content-Type Charset)
pscanbeta.charsetmismatch.desc=This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there's a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content's correct character set.
pscanbeta.charsetmismatch.soln=Force UTF-8 for all text content in both the HTTP header and meta tags in HTML or encoding declarations in XML.
pscanbeta.charsetmismatch.exploit=An attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.
pscanbeta.charsetmismatch.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanbeta.charsetmismatch.extrainfo.html.no_mismatch_metacontenttype_missing=Charset is defined only by META charset, older clients that expect character set to be defined by META content-type may not correctly display this content.
pscanbeta.charsetmismatch.extrainfo.html.header_metacontentype_mismatch=There was a charset mismatch between the HTTP Header and the META content-type encoding declarations\: [{0}] and [{1}] do not match.
pscanbeta.charsetmismatch.extrainfo.html.header_metacharset_mismatch=There was a charset mismatch between the HTTP Header and the META charset encoding declaration\: [{0}] and [{1}] do not match.
pscanbeta.charsetmismatch.extrainfo.html.metacontenttype_metacharset_mismatch=There was a charset mismatch between the META charset and the META content-type encoding declaration\: [{0}] and [{1}] do not match.
pscanbeta.charsetmismatch.extrainfo.xml=There was a charset mismatch between the HTTP Header and the XML encoding declaration\: [{0}] and [{1}] do not match.

pscanbeta.cookielooselyscoped.name=Loosely Scoped Cookie
pscanbeta.cookielooselyscoped.desc=Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.
pscanbeta.cookielooselyscoped.soln=Always scope cookies to a FQDN (Fully Qualified Domain Name).
pscanbeta.cookielooselyscoped.refs=https\://tools.ietf.org/html/rfc6265\#section-4.1\nhttps\://www.owasp.org/index.php/Testing_for_cookies_attributes_(OTG-SESS-002)\nhttp\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanbeta.cookielooselyscoped.extrainfo=The origin domain used for comparison was\: \r\n{0}\r\n{1}
pscanbeta.cookielooselyscoped.extrainfo.cookie={0}\r\n

pscanbeta.informationdisclosuredebugerrors.name=Information Disclosure - Debug Error Messages
pscanbeta.informationdisclosuredebugerrors.desc=The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.
pscanbeta.informationdisclosuredebugerrors.soln=Disable debugging messages before pushing to production.

pscanbeta.informationdisclosureinurl.name=Information Disclosure - Sensitive Informations in URL
pscanbeta.informationdisclosureinurl.desc=The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.
pscanbeta.informationdisclosureinurl.otherinfo.sensitiveinfo=The URL contains potentially sensitive information.
pscanbeta.informationdisclosureinurl.otherinfo.cc=The URL appears to contain credit card information.
pscanbeta.informationdisclosureinurl.otherinfo.email=The URL contains email address(es).
pscanbeta.informationdisclosureinurl.otherinfo.ssn=The URL appears to contain US Social Security Number(s)
pscanbeta.informationdisclosureinurl.soln=Do not pass sensitive information in URIs.

pscanbeta.informationdisclosurereferrerscanner.name=Information Disclosure - Sensitive Information in HTTP Referrer Header
pscanbeta.informationdisclosurereferrerscanner.desc=The HTTP header may have leaked a potentially sensitive parameter to another domain. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.
pscanbeta.informationdisclosurereferrerscanner.otherinfo.sensitiveinfo=The URL in the HTTP referrer header field appears to contain sensitive information.
pscanbeta.informationdisclosurereferrerscanner.otherinfo.cc=The URL in the HTTP referrer header field appears to contain credit card information.
pscanbeta.informationdisclosurereferrerscanner.otherinfo.email=The URL in the HTTP referrer header field contains email address(es).
pscanbeta.informationdisclosurereferrerscanner.otherinfo.ssn=The URL in the HTTP referrer header field appears to contain US Social Security Number(s).
pscanbeta.informationdisclosurereferrerscanner.soln=Do not pass sensitive information in URIs.

pscanbeta.informationdisclosuresuspiciouscomments.name=Information Disclosure - Suspicious Comments
pscanbeta.informationdisclosuresuspiciouscomments.desc=The response appears to contain suspicious comments which may help an attacker.
pscanbeta.informationdisclosuresuspiciouscomments.soln=Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.

pscanbeta.insecureauthentication.name=M\u00e9todo de autenticaci\u00f3n d\u00e9bil
pscanbeta.insecureauthentication.desc=M\u00e9todo HTTP de autenticaci\u00f3n b\u00e1sica o por compendio (hash) ha sido utilizado sobre una conexi\u00f3n no segura. Las credenciales pueden ser le\u00eddas y luego reutilizadas por alguien con acceso a la red.
pscanbeta.insecureauthentication.soln=Protege la conexi\u00f3n usando el protocolo HTTPS o alg\u00fan mecanismo de autenticaci\u00f3n fuerte
pscanbeta.insecureauthentication.refs=www.owasp.org/index.php/Category\:Authentication_Vulnerability

pscanbeta.insecurejsfviewstate.name=JSF ViewState inseguro
pscanbeta.insecurejsfviewstate.desc=La respuesta a la siguiente direcci\u00f3n URL contiene un valor ViewState que no posee ninguna protecci\u00f3n criptogr\u00e1fica.
pscanbeta.insecurejsfviewstate.soln=VIEWSTATE seguro utilizando un MAC espec\u00edfico a tu entorno
pscanbeta.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanbeta.insecurejsfviewstate.extrainfo=JSF ViewState [{0}] es inseguro

pscanbeta.noanticsrftokens.name=Ausencia de fichas (tokens) Anti-CSRF
pscanbeta.noanticsrftokens.desc=No se encontraron fichas (tokens) Anti-CSRF en un formulario HTML.
pscanbeta.noanticsrftokens.alert.extrainfo=Ninguna ficha (token) Anti-CSRF {0} fue encontrada en los siguientes formularios HTML\: {1}.  
pscanbeta.noanticsrftokens.extrainfo.annotation=This is an informational alert as the form has a security annotation indicating that it does not need an anti-CSRF Token. This should be tested manually to ensure the annotation is correct.

pscanbeta.servletparameterpollutionscanner.name=HTTP Parameter Override
pscanbeta.servletparameterpollutionscanner.desc=Unspecified form action\: HTTP parameter override attack potentially possible. This is a known problem with Java Servlets but other platforms may also be vulnerable.
pscanbeta.servletparameterpollutionscanner.soln=All forms must specify the action URL.
pscanbeta.servletparameterpollutionscanner.refs=http\://download.oracle.com/javaee-archive/servlet-spec.java.net/jsr340-experts/att-0317/OnParameterPollutionAttacks.pdf

pscanbeta.viewstatescanner.name=Viewstate Scanner
pscanbeta.viewstatescanner.soln=Verify the provided information isn't confidential.
pscanbeta.viewstatescanner.oldver.name=Old Asp.Net Version in Use
pscanbeta.viewstatescanner.oldver.desc=*** EXPERIMENTAL ***\nThis website uses ASP.NET version 1.0 or 1.1.\n\n
pscanbeta.viewstatescanner.oldver.soln=Ensure the engaged framework is still supported by Microsoft.
pscanbeta.viewstatescanner.nomac.unsure.name=Viewstate without MAC Signature (Unsure)
pscanbeta.viewstatescanner.nomac.unsure.desc=*** EXPERIMENTAL ***\nThis website uses ASP.NET's Viewstate but maybe without any MAC.\n\n
pscanbeta.viewstatescanner.nomac.unsure.soln=Ensure the MAC is set for all pages on this website.
pscanbeta.viewstatescanner.nomac.unsure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanbeta.viewstatescanner.nomac.sure.name=Viewstate without MAC Signature (Sure)
pscanbeta.viewstatescanner.nomac.sure.desc=*** EXPERIMENTAL ***\nThis website uses ASP.NET's Viewstate but without any MAC.\n\n
pscanbeta.viewstatescanner.nomac.sure.soln=Ensure the MAC is set for all pages on this website.
pscanbeta.viewstatescanner.nomac.sure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanbeta.viewstatescanner.split.name=Split Viewstate in Use
pscanbeta.viewstatescanner.split.desc=*** EXPERIMENTAL ***\nThis website uses ASP.NET's Viewstate and its value is split into several chunks.\n
pscanbeta.viewstatescanner.split.soln=None - the guys running the server may have tuned the configuration as this isn't the default setting.
pscanbeta.viewstatescanner.content.email.name=Emails Found in the Viewstate
pscanbeta.viewstatescanner.content.email.desc=The following emails were found being serialized in the viewstate field\:
pscanbeta.viewstatescanner.content.email.pattern.source=Email pattern - http\://www.regular-expressions.info/regexbuddy/email.html
pscanbeta.viewstatescanner.content.ip.name=Potential IP Addresses Found in the Viewstate
pscanbeta.viewstatescanner.content.ip.desc=The following potential IP addresses were found being serialized in the viewstate field\:
pscanbeta.viewstatescanner.content.ip.pattern.source=IP pattern - http\://www.regular-expressions.info/examples.html

