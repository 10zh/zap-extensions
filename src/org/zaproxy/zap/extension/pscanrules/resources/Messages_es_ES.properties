#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

pscanrules.desc=Reglas de la exploraci\u00f3n pasiva

pscanrules.headerxssprotectionscanner.name=Protecci\u00f3n de buscador de web XSS no disponible
pscanrules.headerxssprotectionscanner.desc=La protecci\u00f3n del buscador de web XSS no est\u00e1 disponible, o est\u00e1 deshabilitada por la configuraci\u00f3n de la cabecera de respuesta de HTTP 'X-XSS-Protection' en el servidor de web
pscanrules.headerxssprotectionscanner.refs=https\://www.OWASP.org/index.php/XSS _ (Cross_Site_Scripting) _Prevention_Cheat_Sheet https\://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/
pscanrules.headerxssprotectionscanner.extrainfo=El encabezado de respuesta HTTP X-XSS-Protection le permite al servidor web habilitar o deshabilitar el mecanismo de protecci\u00f3n del navegador web XSS. Los siguientes valores intentan habilitarlo\:\nX-XSS-Protection\: 1; mode\=bloqueo\nX-XSS-Protection\:1; reporte\=http\://www.example.com/xss\nLos siguiente valores lo deshabilitar\u00edan\: \nX-XSS-Protection\: 0\nEl encabezado de respuesta HTTP X-XSS-Protection es actualmente compatible en Internet Explorer, Chrome y Safari (WebKit). Tenga en cuenta que esta alerta solo se produce si el cuerpo de respuesta podr\u00eda pontecialmente contener una carga \u00fatil XSS (con un tipo de contenido basado en texto, con una longitud distinta de cero).
pscanrules.headerxssprotectionscanner.soln=Aseg\u00farese que el filtro XSS del navegador web est\u00e1 habilitado, estableciendo el encabezado de respuesta HTTP X-XSS-Protection en '1'.

pscanrules.xframeoptionsscanner.name=Opciones del encabezado del esc\u00e1ner X-Frame
pscanrules.xframeoptionsscanner.incInCsp=La pol\u00edtica de seguridad de contenido incluye un elemento 'marco-antepasados' que tiene prioridad sobre la cabecera X-Frame-Options. raz\u00f3n por la cual este ha sido elevado con un bajo riesgo.  
pscanrules.xframeoptionsscanner.missing.name=Encabezado X-Frame-Options no establecido
pscanrules.xframeoptionsscanner.missing.desc=El encabezado X-Frame_options no est\u00e1 incluido en la respuesta HTTP para proteger ante ataques 'ClickJacking'.
pscanrules.xframeoptionsscanner.missing.refs=http\://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx
pscanrules.xframeoptionsscanner.missing.soln=Los navegadores de web mas modernos apoyan la cabecera HTTP X-Frame-Options. Aseg\u00farese que est\u00e1 establecido en todas las p\u00e1ginas web devuelta por su sitio (si usted espera que la p\u00e1gina este enmarcada solo por p\u00e1ginas en su servidor (por ejemplo, es parte de un FRAMESET) entonces usted querr\u00e1 usar SAMEORIGIN, de otras forma si usted nunca espera que la p\u00e1gina est\u00e9 enmarcada, deber\u00eda usar DENY. ALLOW-FROM permite a sitios web espec\u00edficos enmarcar la p\u00e1gina web en navegadores web compatibles).
pscanrules.xframeoptionsscanner.multiple.header.name=M\u00faltiples entradas de encabezado X-Frame-Options
pscanrules.xframeoptionsscanner.multiple.header.desc=Encabezados X-Frame-Options (XFO) fueron encontrados, una respuesta con m\u00faltiples entradas de encabezados XFO podr\u00eda no ser tratada como se espera por todos los agentes de usuario.
pscanrules.xframeoptionsscanner.multiple.header.refs=https\://tools.ietf.org/html/rfc7034
pscanrules.xframeoptionsscanner.multiple.header.soln=Aseg\u00farese que solo un encabezado X-Frame-Options est\u00e1 presente en la respuesta.
pscanrules.xframeoptionsscanner.compliance.meta.name=X-Frame-Options definidas mediante META (no-obediente con especificaciones)
pscanrules.xframeoptionsscanner.compliance.meta.desc=Se encontr\u00f3 una etiqueta META X-Frame-Options (XFO), definiendo XFO mediante una etiqueta TAG es expl\u00edcitamente no compatible con la especificaci\u00f3n (RFC 7034).
pscanrules.xframeoptionsscanner.compliance.meta.refs=https\://tools.ietf.org/html/rfc7034\#section-4
pscanrules.xframeoptionsscanner.compliance.meta.soln=Aseg\u00fareque de que X-Frame-Options es configurado mediante un campo de encabezado de respuesta.
pscanrules.xframeoptionsscanner.compliance.malformed.setting.name=Ajuste incorrecto de X-Frame-Options
pscanrules.xframeoptionsscanner.compliance.malformed.setting.desc=Un encabezado X-Frame-Options estuvo presente en la respuesta pero el valor no se estableci\u00f3 correctamente.
pscanrules.xframeoptionsscanner.compliance.malformed.setting.refs=https\://tools.ietf.org/html/rfc7034\#section-2.1
pscanrules.xframeoptionsscanner.compliance.malformed.setting.soln=Aseg\u00farese que ajustes v\u00e1lidos son usados en todas las p\u00e1ginas web en su sitio (si usted espera que la p\u00e1gina sea enmarcada solo por p\u00e1ginas en su servidos (por ejemplo, es parte de un FRAMESET) entonces usted querr\u00e1 usar SAMEORIGIN, de otras forma si usted no espera nunca que la p\u00e1gina sea enmarcada, usted deber\u00eda usar DENY. ALLOW-FROM le permite a sitios web espec\u00edficos enmarcar la p\u00e1gina web en navegadores web compatibles).

pscanrules.xcontenttypeoptionsscanner.name=No se encuentra encabezado X-Content-Type-Options Header
pscanrules.xcontenttypeoptionsscanner.desc=The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.
pscanrules.xcontenttypeoptionsscanner.otherinfo=This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt "High" threshold this scanner will not alert on client or server error responses.
pscanrules.xcontenttypeoptionsscanner.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers
pscanrules.xcontenttypeoptionsscanner.soln=Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.

pscanrules.applicationerrorscanner.name=Application Error Disclosure
pscanrules.applicationerrorscanner.desc=This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.
pscanrules.applicationerrorscanner.soln=Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.

pscanrules.cachecontrolscanner.name=Incomplete or No Cache-control and Pragma HTTP Header Set
pscanrules.cachecontrolscanner.desc=The cache-control and pragma HTTP header have not been set properly or are missing allowing the browser and proxies to cache content.
pscanrules.cachecontrolscanner.soln=Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate; and that the pragma HTTP header is set with no-cache.
pscanrules.cachecontrolscanner.refs=https\://www.owasp.org/index.php/Session_Management_Cheat_Sheet\#Web_Content_Caching

pscanrules.contenttypemissingscanner.name=Content-Type Header Missing
pscanrules.contenttypemissingscanner.name.empty=Content-Type Header Empty
pscanrules.contenttypemissingscanner.desc=The Content-Type header was either missing or empty.
pscanrules.contenttypemissingscanner.soln=Ensure each page is setting the specific and appropriate content-type value for the content being delivered.
pscanrules.contenttypemissingscanner.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx

pscanrules.cookiehttponlyscanner.name=Cookie No HttpOnly Flag
pscanrules.cookiehttponlyscanner.desc=A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.
pscanrules.cookiehttponlyscanner.soln=Ensure that the HttpOnly flag is set for all cookies.
pscanrules.cookiehttponlyscanner.refs=http\://www.owasp.org/index.php/HttpOnly

pscanrules.cookiesecureflagscanner.name=Cookie Without Secure Flag
pscanrules.cookiesecureflagscanner.desc=A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.
pscanrules.cookiesecureflagscanner.soln=Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.
pscanrules.cookiesecureflagscanner.refs=http\://www.owasp.org/index.php/Testing_for_cookies_attributes_(OWASP-SM-002)

pscanrules.crossdomainscriptinclusionscanner.name=Cross-Domain JavaScript Source File Inclusion
pscanrules.crossdomainscriptinclusionscanner.desc=The page includes one or more script files from a third-party domain.
pscanrules.crossdomainscriptinclusionscanner.soln=Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.

pscanrules.mixedcontentscanner.name=Secure Pages Include Mixed Content
pscanrules.mixedcontentscanner.name.inclscripts=Secure Pages Include Mixed Content (Including Scripts)
pscanrules.mixedcontentscanner.desc=The page includes mixed content, that is content accessed via HTTP instead of HTTPS.
pscanrules.mixedcontentscanner.soln=A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\n This includes content from third party sites.
pscanrules.mixedcontentscanner.refs=https\://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet

pscanrules.passwordautocompletescanner.name=Password Autocomplete in Browser
pscanrules.passwordautocompletescanner.desc=The AUTOCOMPLETE attribute is not disabled on an HTML FORM/INPUT element containing password type input.  Passwords may be stored in browsers and retrieved.
pscanrules.passwordautocompletescanner.soln=Turn off the AUTOCOMPLETE attribute in forms or individual input elements containing password inputs by using AUTOCOMPLETE\='OFF'.
pscanrules.passwordautocompletescanner.refs=http\://www.w3schools.com/tags/att_input_autocomplete.asp\nhttps\://msdn.microsoft.com/en-us/library/ms533486%28v\=vs.85%29.aspx

pscanrules.testinfoprivateaddressdisclosure.name=Private IP Disclosure
pscanrules.testinfoprivateaddressdisclosure.desc=A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.
pscanrules.testinfoprivateaddressdisclosure.soln=Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.
pscanrules.testinfoprivateaddressdisclosure.refs=https\://tools.ietf.org/html/rfc1918

pscanrules.testinfosessionidurl.name=Session ID in URL Rewrite
pscanrules.testinfosessionidurl.desc=URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.
pscanrules.testinfosessionidurl.soln=For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.
pscanrules.testinfosessionidurl.refs=http\://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html
pscanrules.testinfosessionidurl.referrer.alert=Referer Exposes Session ID
pscanrules.testinfosessionidurl.referrer.desc=A hyperlink pointing to anther host name was found. As session ID URL rewrite is used, it may be disclosed in referer header to external hosts.
pscanrules.testinfosessionidurl.referrer.soln=This is a risk if the session ID is sensitive and the hyperlink refers to an external or third party host. For secure content, put session ID in secured session cookie.

