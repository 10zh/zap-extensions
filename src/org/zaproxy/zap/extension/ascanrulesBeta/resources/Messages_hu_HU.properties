#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

ascanbeta.desc=Active Scan Rules - beta

ascanbeta.backupfiledisclosure.name=Backup File Disclosure
ascanbeta.backupfiledisclosure.desc=A f\u00e1jl biztons\u00e1gi m\u00e1solat\u00e1nak hozt\u00e1k nyilv\u00e1noss\u00e1gra, a webkiszolg\u00e1l\u00f3 \u00e1ltal
ascanbeta.backupfiledisclosure.soln=Nem in situ a webkiszolg\u00e1l\u00f3n l\u00e9v\u0151 f\u00e1jlok szerkeszt\u00e9s\u00e9hez, \u00e9s biztos\u00edtja, hogy a kicsi-necesary f\u00e1jlokat (bele\u00e9rtve a rejtett f\u00e1jlokat) elt\u00e1vol\u00edtj\u00e1k a webkiszolg\u00e1l\u00f3r\u00f3l.
ascanbeta.backupfiledisclosure.evidence=A backup of [{0}] is available at [{1}]

ascanbeta.crossdomain.name=Cross-Domain Misconfiguration
#the refs cannot be customised for each sub-category (Adobe, Silverlight, etc)
ascanbeta.crossdomain.refs=http\://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html\nhttp\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf\nhttp\://msdn.microsoft.com/en-US/library/cc197955%28v\=vs.95%29.aspx\nhttp\://msdn.microsoft.com/en-us/library/cc838250%28v\=vs.95%29.aspx
ascanbeta.crossdomain.adobe.read.name=Cross-Domain Misconfiguration - Adobe - Read
ascanbeta.crossdomain.adobe.send.name=Cross-Domain Misconfiguration - Adobe - Send
ascanbeta.crossdomain.adobe.desc=Flash/Silverlight based cross-site request forgery may be possible, due to a misconfiguration on the web server. 
ascanbeta.crossdomain.adobe.read.soln=Configure the crossdomain.xml file to restrict the list of domains that are allowed to make cross-domain read requests to this web server, using <allow-access-from domain\="example.com">. You should only grant access to "*" (all domains) if you are certain that this service does not host any access-controlled, personalized, or private data.
ascanbeta.crossdomain.adobe.read.extrainfo=A web szerver lehet\u0151v\u00e9 teszi a rosszindulat\u00fa cross-domain adatok, olvasd el k\u00e9r\u00e9sek sz\u00e1rmaz\u00f3 Flash/Silverlight alkatr\u00e9szek szolg\u00e1lt b\u00e1rmely harmadik f\u00e9l domain, hogy ezen a ter\u00fcleten. Ha az \u00e1ldozat felhaszn\u00e1l\u00f3 jelentkezett be ezt a szolg\u00e1ltat\u00e1st, a rosszindulat\u00fa olvassa el k\u00e9r\u00e9sek feldolgoz\u00e1sa a jogosults\u00e1gokat az \u00e1ldozat, ez azt eredm\u00e9nyezheti, hogy az adatokat ezt a szolg\u00e1ltat\u00e1st, hogy vesz\u00e9lyezteti jogosulatlan harmadik f\u00e9l webhely\u00e9n kereszt\u00fcl az \u00e1ldozat b\u00f6ng\u00e9sz\u0151. Ez k\u00fcl\u00f6n\u00f6sen val\u00f3sz\u00edn\u0171, hogy probl\u00e9ma, ha egy Cookie alap\u00fa munkamenet-v\u00e9grehajt\u00e1si haszn\u00e1ljuk. 
ascanbeta.crossdomain.adobe.send.soln=Configure the crossdomain.xml file to restrict the list of domains that are allowed to make cross-domain send (but not necessarily read) requests to this web server, using <allow-http-request-headers-from domain\="example.com" headers\="Authorization,X-Blahh">. You should only grant access to "*" (all domains) if you are certain that this service is not vulnerable to Cross Site Request Forgery (CSRF) attacks.
ascanbeta.crossdomain.adobe.send.extrainfo=A web szerver lehet\u0151v\u00e9 teszi a rosszindulat\u00fa cross-domain adatok k\u00fcld\u00e9se (de nem felt\u00e9tlen\u00fcl olvasd el) k\u00e9ri sz\u00e1rmaz\u00f3 Flash/Silverlight alkatr\u00e9szek szolg\u00e1lt b\u00e1rmely harmadik f\u00e9l domain, hogy ezen a ter\u00fcleten. Ha az \u00e1ldozat felhaszn\u00e1l\u00f3 jelentkezett be ezt a szolg\u00e1ltat\u00e1st, a rosszindulat\u00fa k\u00fcldj k\u00e9r\u00e9seket a feldolgozott seg\u00edts\u00e9g\u00e9vel a jogosults\u00e1gok az \u00e1ldozat, ez azt eredm\u00e9nyezheti, hogy Cross Site Request Hamis\u00edt\u00e1s (CSRF) t\u00edpus\u00fa t\u00e1mad\u00e1sok, kereszt\u00fcl az \u00e1ldozat b\u00f6ng\u00e9sz\u0151. Ez k\u00fcl\u00f6n\u00f6sen val\u00f3sz\u00edn\u0171, hogy probl\u00e9ma, ha egy Cookie alap\u00fa munkamenet-v\u00e9grehajt\u00e1si haszn\u00e1ljuk.
ascanbeta.crossdomain.silverlight.name=Cross-Domain Misconfiguration - Silverlight
ascanbeta.crossdomain.silverlight.desc=Silverlight based cross-site request forgery may be possible, due to a misconfiguration on the web server.
ascanbeta.crossdomain.silverlight.soln=Configure the clientaccesspolicy.xml file to restrict the list of domains that are allowed to make cross-domain requests to this web server, using <domain uri\="https\://example.com" />. You should only grant access to "*" (all domains) if you are certain that this service does not host any access-controlled, personalized, or private data.
ascanbeta.crossdomain.silverlight.extrainfo=A web szerver lehet\u0151v\u00e9 teszi a rosszindulat\u00fa cross-domain k\u00e9r\u00e9sek sz\u00e1rmaz\u00f3 Silverlight alkatr\u00e9szek szolg\u00e1lt b\u00e1rmely harmadik f\u00e9l domain, hogy ezen a ter\u00fcleten. Ha az \u00e1ldozat felhaszn\u00e1l\u00f3 jelentkezett be ezt a szolg\u00e1ltat\u00e1st, a rosszindulat\u00fa k\u00e9r\u00e9sek feldolgoz\u00e1sa a jogosults\u00e1gokat az \u00e1ldozat, ez azt eredm\u00e9nyezheti, hogy az adatokat ezt a szolg\u00e1ltat\u00e1st, hogy vesz\u00e9lyezteti jogosulatlan harmadik f\u00e9l webhely\u00e9n kereszt\u00fcl az \u00e1ldozat b\u00f6ng\u00e9sz\u0151k. Ez azt is eredm\u00e9nyezi, hogy Cross Site Request Hamis\u00edt\u00e1s (CSRF) t\u00edpus\u00fa t\u00e1mad\u00e1sok. Ez k\u00fcl\u00f6n\u00f6sen val\u00f3sz\u00edn\u0171, hogy probl\u00e9ma, ha egy Cookie alap\u00fa munkamenet-v\u00e9grehajt\u00e1si haszn\u00e1ljuk.

ascanbeta.csrftokenscan.name=Anti CSRF Tokens Scanner
ascanbeta.csrftokenscan.extrainfo.annotation=This is an informational alert as the form has a security annotation indicating that it does not need an anti-CSRF Token. This should be tested manually to ensure the annotation is correct.

ascanbeta.heartbleed.name=Heartbleed OpenSSL Vulnerability
ascanbeta.heartbleed.desc=The TLS implementation in OpenSSL 1.0.1 before 1.0.1g does not properly handle Heartbeat Extension packets, which allows remote attackers to obtain sensitive information from process memory via crafted packets that trigger a buffer over-read, potentially disclosing sensitive information.
ascanbeta.heartbleed.soln=Update to OpenSSL 1.0.1g or later. Re-issue HTTPS certificates. Change asymmetric private keys and shared secret keys, since these may have been compromised, with no evidence of compromise in the server log files.
ascanbeta.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
ascanbeta.heartbleed.extrainfo=Ezt a k\u00e9rd\u00e9st is meger\u0151s\u00edtette exfiltrating adatokat a szerver haszn\u00e1lat\u00e1val {0}. Ez nem val\u00f3sz\u00edn\u0171, hogy hamis pozit\u00edv.

ascanbeta.HTTPParamPoll.name=HTTP Parameter Pollution scanner
ascanbeta.HTTPParamPoll.desc=HTTP Parameter Pollution (HPP) attacks consist of injecting encoded query string delimiters into other existing parameters. If a web application does not properly sanitize the user input, a malicious user can compromise the logic of the application to perform either client-side or server-side attacks. One consequence of HPP attacks is that the attacker can potentially override existing hard-coded HTTP parameters to modify the behavior of an application, bypass input validation checkpoints, and access and possibly exploit variables that may be out of direct reach.
ascanbeta.HTTPParamPoll.sol=Properly sanitize the user input for parameter delimiters
ascanbeta.HTTPParamPoll.alert.attack=HTTP Parameter Pollution
ascanbeta.HTTPParamPoll.extrainfo=http\://www.google.com/search?q\=http+parameter+pollution

ascanbeta.insecurehttpmethod.name=Insecure HTTP Method
ascanbeta.insecurehttpmethod.detailed.name=Insecure HTTP Method - {0}
ascanbeta.insecurehttpmethod.desc=The insecure HTTP method [{0}] is enabled on the web server for this resource. Depending on the web server configuration, and the underlying implementation responsible for serving the resource, this might or might not be exploitable. The TRACK and TRACE methods may be used by an attacker, to gain access to the authorisation token/session cookie of an application user, even if the session cookie is protected using the ''HttpOnly'' flag. For the attack to be successful, the application user must typically be using an older web browser, or a web browser which has a Same Origin Policy (SOP) bypass vulnerability. The ''CONNECT'' method can be used by a web client to create an HTTP tunnel to third party websites or services.
ascanbeta.insecurehttpmethod.trace.exploitable.desc=The insecure HTTP method [{0}] is enabled for this resource, and is exploitable. The TRACK and TRACE methods may be used by an attacker, to gain access to the authorisation token/session cookie of an application user, even if the session cookie is protected using the ''HttpOnly'' flag. For the attack to be successful, the application user must typically be using an older web browser, or a web browser which has a Same Origin Policy (SOP) bypass vulnerability.
ascanbeta.insecurehttpmethod.connect.exploitable.desc=The insecure HTTP method [{0}] is enabled for this resource, and is exploitable. It was found to be possible to establish a tunneled socket connection to a third party service, using this HTTP method.  This would allow the service to be used as an anonymous spam relay, or as a web proxy, bypassing network restrictions. It also allows it to be used to establish a tunneled VPN, effectively extending the network perimeter to include untrusted components. 
ascanbeta.insecurehttpmethod.extrainfo=The OPTIONS method disclosed the following enabled HTTP methods for this resource\: [{0}]
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo=A TRACE request was sent for this request, with a custom cookie value [{0}]. This cookie value was disclosed in the HTTP response, confirming the vulnerability.
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo=The CONNECT method was used to establish a socket connection to [{0}], via the web server.
ascanbeta.insecurehttpmethod.soln=Disable insecure methods such as TRACK, TRACE, and CONNECT on the web server, and ensure that the underlying service implementation does not support insecure methods.


ascanbeta.integeroverflow.name=Integer Overflow Error
ascanbeta.integeroverflow.desc=Egy integer overflow \u00e1llapot \u00e1ll fenn, ha egy eg\u00e9sz sz\u00e1m, amely nem megfelel\u0151en ellen\u0151rz\u00f6tt a bemeneti adatfolyamot haszn\u00e1lt bel\u00fcl \u00f6ssze\u00e1ll\u00edtott program. 
ascanbeta.integeroverflow.soln=\u00c1t\u00edrni a h\u00e1tt\u00e9rben a program seg\u00edts\u00e9g\u00e9vel megfelel\u0151 ellen\u0151rz\u00e9se a m\u00e9ret integer, hogy a bemeneti, hogy megakad\u00e1lyozz\u00e1k t\u00falcsordul, osztva 0 hib\u00e1k. Ehhez egy \u00fajraford\u00edtani a h\u00e1tt\u00e9rben futtathat\u00f3.
ascanbeta.integeroverflow.refs=https\://www.owasp.org/index.php/Integer_overflow and http\://projects.webappsec.org/w/page/13246946/Integer%20Overflows.
ascanbeta.integeroverflow.error1=Potential Integer Overflow.  Status code changed on the input of a long string of random integers.
ascanbeta.integeroverflow.error2=Potential Integer Overflow.  Status code changed on the input of a long string of zeros.
ascanbeta.integeroverflow.error3=Potential Integer Overflow.  Status code changed on the input of a long string of ones.
ascanbeta.integeroverflow.error4=Potential Integer Overflow.  Status code changed on the input of a long string of nines.

ascanbeta.noanticsrftokens.name=Absence of Anti-CSRF Tokens
ascanbeta.noanticsrftokens.desc=No Anti-CSRF tokens were found in a HTML submission form.

ascanbeta.remotecodeexecution.cve-2012-1823.name=Remote Code Execution - CVE-2012-1823
ascanbeta.remotecodeexecution.cve-2012-1823.desc=Some PHP versions, when configured to run using CGI, do not correctly handle query strings that lack an unescaped "\=" character, enabling arbitrary code execution. In this case, an operating system command was caused to be executed on the web server, and the results were returned to the web browser. 
ascanbeta.remotecodeexecution.cve-2012-1823.soln=Upgrade to the latest stable version of PHP, or use the Apache web server and the mod_rewrite module to filter out malicious requests using the "RewriteCond" and "RewriteRule" directives.

ascanbeta.sessionfixation.name=Session Fixation
ascanbeta.sessionfixation.desc=Session Fixation may be possible. If this issue occurs with a login URL (where the user authenticates themselves to the application), then the URL may be given by an attacker, along with a fixed session id, to a victim, in order to later assume the identity of the victim using the given session id. If the issue occurs with a non-login page, the URL and fixed session id may only be used by an attacker to track an unauthenticated user's actions. If the vulnerability occurs on a cookie field or a form field (POST parameter) rather than on a URL (GET) parameter, then some other vulnerability may also be required in order to set the cookie field on the victim's browser, to allow the vulnerability to be exploited.
ascanbeta.sessionfixation.soln=1) Prevent the attacker from gaining a session id by enforcing strict session ids, and by only allocating session ids upon successful authentication to the application.\n2) The server should always create a new session id upon authentication, regardless of whether a session is already in place.\n3) Bind the session id to some identificable client attribute combination, such as IP address, SSL client certificate.\n4) Sessions, when destroyed, must be destroyed on the server, as well as on the client.\n5) Implement a logout mechanism which will destroy all previous sessions for the client.\n6) Implement absolute session timeouts.\n7)Switch from a URL based to a cookie or form based session id implementation, as the latter typically require additional vulnerabilities, in order to be exploitable by an attacker\n
ascanbeta.sessionfixation.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management\nhttps\://www.owasp.org/index.php/Session_fixation\nhttp\://www.acros.si/papers/session_fixation.pdf\nhttp\://www.technicalinfo.net/papers/WebBasedSessionManagement.html\nhttps\://www.owasp.org/index.php/Top_10_2010-A9
ascanbeta.sessionfixation.alert.cookie.extrainfo=Cookie set in response when cookie field [{0}] is set to NULL\: [{1}]\nCookie set in response with borrowed (valid) cookie value in request [{1}] \: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage=The url on which the issue was discovered was flagged as a logon page.
ascanbeta.sessionfixation.alert.url.extrainfo=A likely session value has appeared in URLs in the HTML output when URL parameter/pseudo URL parameter [{0}] is set to NULL\: [{1}]\nWhen this ''borrowed'' session [{1}] is used in a subsequent request for this URL, a new session is not created.
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage=Az url-t, amelyen a probl\u00e9m\u00e1t fedeztek fel volt megjel\u00f6lve, mint a bejelentkez\u00e9si oldalon.
ascanbeta.sessionfixation.alert.attack={0} field\: [{1}]
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name=Exposed Session ID
ascanbeta.sessionidexposedinurl.desc=A session id is exposed in the URL. By sharing such a website URL (containing the session id), a naiive user may be inadvertently granting access to their data, compromising its confidentiality, integrity, and availability.  URLs containing the session identifier also appear in web browser bookmarks, web server log files, and proxy server log files. 
ascanbeta.sessionidexposedinurl.soln=Haszn\u00e1ljon biztons\u00e1gos munkamenet-kezel\u00e9s, v\u00e9grehajt\u00e1s, mint haszn\u00e1l session cookie-kat, amelyek nem olyan k\u00f6nnyen, megosztott v\u00e9letlen\u00fcl, amelyek \u00e1ltal\u00e1ban nem jelennek meg a szerver log f\u00e1jlok vagy a b\u00f6ng\u00e9sz\u0151 k\u00f6nyvjelz\u0151i.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management
ascanbeta.sessionidexposedinurl.alert.extrainfo={0} field [{1}] contains an exposed session identifier [{2}]
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage=Az url-t, amelyen a probl\u00e9m\u00e1t fedeztek fel volt megjel\u00f6lve, mint a bejelentkez\u00e9si oldalon.
ascanbeta.sessionidexposedinurl.alert.attack={0} field\: [{1}]
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name=Session ID Transmitted Insecurely
ascanbeta.sessionidsentinsecurely.desc=Session id-t lehet k\u00fcldeni kereszt\u00fcl egy bizonytalan mechanizmus. Abban az esetben, ha egy cookie elk\u00fcld\u00e9sre a k\u00e9r\u00e9st, ez akkor fordul el\u0151, ha a HTTP helyett a HTTPS haszn\u00e1latos. Abban az esetben, ha egy cookie-t k\u00fcld\u00f6tt a szerver v\u00e1lasza (ha az URL-t m\u00f3dos\u00edtotta a be\u00e1ll\u00edt\u00e1st a nev\u0171 param\u00e9ter mez\u0151ben NULL), a "biztons\u00e1gos" z\u00e1szl\u00f3 nincs be\u00e1ll\u00edtva, \u00edgy a cookie-a k\u00e9s\u0151bb elk\u00fcldend\u0151 kereszt\u00fcl a HTTP helyett kereszt\u00fcl HTTPS. Ez lehet\u0151v\u00e9 teszi, hogy egy passz\u00edv hallgat\u00f3z\u00f3 a h\u00e1l\u00f3zati el\u00e9r\u00e9si utat, hogy teljes k\u00f6r\u0171 hozz\u00e1f\u00e9r\u00e9st szerezni az \u00e1ldozat \u00fcl\u00e9s\u00e9n.  
ascanbeta.sessionidsentinsecurely.soln=1) Haszn\u00e1lja a rendelkez\u00e9sre \u00e1ll\u00f3 legfrissebb v\u00e1ltozata SSL/TLS (HTTPS) minden olyan oldalak, ahol egy munkamenet-azonos\u00edt\u00f3 k\u00f6z\u00f6lt k\u00f6z\u00f6tt a b\u00f6ng\u00e9sz\u0151, majd a web-szerver.\n2) nem teszik lehet\u0151v\u00e9 a kommunik\u00e1ci\u00f3t, hogy k\u00e9nytelen a titkos\u00edtatlan HTTP protokoll.\n3) Haszn\u00e1lja a "biztons\u00e1gos" z\u00e1szl\u00f3 be\u00e1ll\u00edt\u00e1sakor egy cookie-t tartalmaz\u00f3 session id-t, annak \u00e9rdek\u00e9ben, hogy megakad\u00e1lyozza a k\u00e9s\u0151bbi ad\u00e1st egy bizonytalan mechanizmus.\n4) El\u0151re nem biztons\u00e1gos HTTP oldal k\u00e9ri, hogy a biztons\u00e1gos HTTPS egyen\u00e9rt\u00e9k\u0171 oldal.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management\nhttps\://www.owasp.org/index.php/Top_10_2010-A9
ascanbeta.sessionidsentinsecurely.alert.extrainfo=session identifier {0} field [{1}], value [{2}] may be sent via an insecure mechanism.  
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset=The 'secure' flag was not set on the session cookie supplied by the server.
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage=The url on which the issue was discovered was flagged as a logon page.
ascanbeta.sessionidsentinsecurely.alert.attack={0} field\: [{1}]
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name=Session ID Cookie Accessible to JavaScript
ascanbeta.sessionidaccessiblebyjavascript.desc=Egy Munkamenet-Azonos\u00edt\u00f3 cookie-t k\u00fcld\u00f6tt a szerver (ha az URL-t m\u00f3dos\u00edtotta a be\u00e1ll\u00edt\u00e1st a nev\u0171 param\u00e9ter mez\u0151ben NULL) lehet hozz\u00e1f\u00e9rni, a JavaScript haszn\u00e1lat\u00e1t az \u00fcgyf\u00e9l. Egy\u00fctt egy m\u00e1sik sebezhet\u0151s\u00e9g, ez lehet\u0151v\u00e9 teszi, hogy a munkamenet elt\u00e9r\u00edtett.  
ascanbeta.sessionidaccessiblebyjavascript.soln=1) Use the 'httponly' flag when setting a cookie containing a session id, to prevent it from being accessed by JavaScript in the web browser.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo=session identifier {0} field [{1}], value [{2}] may be accessed using JavaScript in the web browser
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage=The url on which the issue was discovered was flagged as a logon page.
ascanbeta.sessionidaccessiblebyjavascript.alert.attack={0} field\: [{1}]
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name=Session ID Expiry Time/Max-Age is Excessive
ascanbeta.sessionidexpiry.desc=Egy Munkamenet-Azonos\u00edt\u00f3 cookie-t k\u00fcld\u00f6tt a szerver (ha az URL-t m\u00f3dos\u00edtotta a be\u00e1ll\u00edt\u00e1st a nev\u0171 param\u00e9ter mez\u0151ben NULL) be\u00e1ll\u00edt\u00e1s lesz \u00e9rv\u00e9nyes a t\u00falzott ideig. Lehet, hogy ez kihaszn\u00e1lhat\u00f3, a t\u00e1mad\u00f3 \u00e1ltal ha a felhaszn\u00e1l\u00f3 elfelejti, hogy jelentkezzen be, ha a kijelentkez\u00e9s funkci\u00f3 nem megfelel\u0151en elpuszt\u00edtsa az \u00fcl\u00e9s, vagy ha a session id vesz\u00e9lyezteti m\u00e1s jelent.     
ascanbeta.sessionidexpiry.soln=1) Use the 'Expire' or 'Max-Age' cookie directives when setting a cookie containing a session id, to prevent it from being available for prolonged periods of time.\n2) Ensure that logout functionality exists, and that it correctly destroys the session.\n3) Use other preventative measures to ensure that if a session id is compromised, it may not be exploited.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=
ascanbeta.sessionidexpiry.alert.extrainfo=session identifier {0} field [{1}], value [{2}] may be accessed until [{3}] (since cookie was received at {4}), unless the session is destroyed.
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage=The url on which the issue was discovered was flagged as a logon page.
ascanbeta.sessionidexpiry.alert.attack={0} field\: [{1}]
ascanbeta.sessionidexpiry.browserclose=browser close
ascanbeta.sessionidexpiry.timemorethanoneweek=More than one week
ascanbeta.sessionidexpiry.timemorethanoneday=More than one day
ascanbeta.sessionidexpiry.timemorethanonehour=More than one hour
ascanbeta.sessionidexpiry.timelessthanonehour=Less than one hour
ascanbeta.sessionidexpiry.timeexpired=Lej\u00e1rt

ascanbeta.shellshock.name=Remote Code Execution - Shell Shock
ascanbeta.shellshock.desc=The server is running a version of the Bash shell that allows remote attackers to execute arbitrary code 
ascanbeta.shellshock.extrainfo=From CVE-2014-6271\: GNU Bash through 4.3 processes trailing strings after function definitions in the values of environment variables, which allows remote attackers to execute arbitrary code via a crafted environment, as demonstrated by vectors involving the ForceCommand feature in OpenSSH sshd, the mod_cgi and mod_cgid modules in the Apache HTTP Server, scripts executed by unspecified DHCP clients, and other situations in which setting the environment occurs across a privilege boundary from Bash execution, aka "ShellShock." NOTE\: the original fix for this issue was incorrect; CVE-2014-7169 has been assigned to cover the vulnerability that is still present after the incorrect fix.
ascanbeta.shellshock.soln=Update Bash on the server to the latest version
ascanbeta.shellshock.ref=http\://web.nvd.nist.gov/view/vuln/detail?vulnId\=CVE-2014-6271\nhttp\://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html
ascanbeta.shellshock.timingbased.evidence=Using the attack, a delay of [{0}] milliseconds was induced and detected

ascanbeta.sqlinjection.mysql.name=SQL Injection - MySQL
ascanbeta.sqlinjection.hypersonic.name=SQL Injection - Hypersonic SQL
ascanbeta.sqlinjection.oracle.name=SQL Injection - Oracle
ascanbeta.sqlinjection.postgres.name=SQL Injection - PostgreSQL
ascanbeta.sqlinjection.desc=SQL injection may be possible
ascanbeta.sqlinjection.soln=Do not trust client side input, even if there is client side validation in place. \nIn general, type check all data on the server side.\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\nIf database Stored Procedures can be used, use them.\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\nDo not create dynamic SQL queries using simple string concatenation.\nEscape all data received from the client.\nApply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.\nApply the privilege of least privilege by using the least privileged database user possible.\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\nGrant the minimum database access that is necessary for the application.
ascanbeta.sqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
#ascanbeta.sqlinjection.alert.errorbased.attack={1}
ascanbeta.sqlinjection.alert.errorbased.differentiation.attack=Original Value\: [{0}]. Modified Value\: [{1}]. Control Value\: [{2}]
ascanbeta.sqlinjection.alert.booleanbased.attack=field\: [{0}], value [{1}]
ascanbeta.sqlinjection.alert.unionbased.attack=[{0}] field\: [{1}], value [{2}]
ascanbeta.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] likely, given error message fragment [{1}] in HTML results
ascanbeta.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] likely, given UNION-specific message fragment [{1}] in HTML results
ascanbeta.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=Unmodified message gave HTTP status [{0}], modified message gave HTTP status [{1}]
ascanbeta.sqlinjection.alert.errorbased.differentiation.extrainfo=Unmodified message gave HTTP status [{0}], body of length [{1}], modified message gave HTTP status [{2}], body of length [{3}]. A third (non-SQL injection inducing value) gave HTTP status [{4}], body of length [{5}]
ascanbeta.sqlinjection.alert.booleanbased.extrainfo=The page results were successfully manipulated using the boolean conditions [{0}] and [{1}]
ascanbeta.sqlinjection.alert.timebased.extrainfo=The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, when the original unmodified query with value [{2}] took [{3}] milliseconds 

ascanbeta.sourcecodedisclosure.desc=The source code for the current page was disclosed by the web server

ascanbeta.sourcecodedisclosurecve-2012-1823.name=Source Code Disclosure - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.desc=Some PHP versions, when configured to run using CGI, do not correctly handle query strings that lack an unescaped "\=" character, enabling PHP source code disclosure, and arbitrary code execution. In this case, the contents of the PHP file were served directly to the web browser. This output will typically contain PHP, although it may also contain straight HTML.
ascanbeta.sourcecodedisclosurecve-2012-1823.soln=Friss\u00edt\u00e9s a leg\u00fajabb stabil verzi\u00f3 a PHP, vagy haszn\u00e1lja az Apache web szerver, illetve a mod_rewrite modul, hogy kisz\u0171rje a rosszindulat\u00fa k\u00e9r\u00e9seket az "RewriteCond", "RewriteRule" ir\u00e1nyelvek.

ascanbeta.sourcecodedisclosure.svnbased.name=Source Code Disclosure - SVN
ascanbeta.sourcecodedisclosure.svnbased.soln=Ensure that SVN metadata files are not deployed to the web server or application server
ascanbeta.sourcecodedisclosure.svnbased.extrainfo=The source code for [{0}] was found at [{1}]

ascanbeta.sourcecodedisclosurewebinf.name=Source Code Disclosure - /WEB-INF folder
ascanbeta.sourcecodedisclosurewebinf.desc=A Java forr\u00e1s k\u00f3d nyilv\u00e1noss\u00e1gra a web-szerver a Java class f\u00e1jlokat a WEB-INF mapp\u00e1t. A class f\u00e1jlokat lehet dis-\u00f6ssze el\u0151\u00e1ll\u00edt\u00e1s\u00e1hoz forr\u00e1s k\u00f3d, amely szorosan illeszkedik az eredeti forr\u00e1sk\u00f3d.  
ascanbeta.sourcecodedisclosurewebinf.soln=A web szervert kell be\u00e1ll\u00edtani, hogy nem szolg\u00e1lja a /WEB-INF mapp\u00e1t, vagy annak tartalm\u00e1t a web b\u00f6ng\u00e9sz\u0151k, mivel ez tartalmazza a k\u00e9nyes inform\u00e1ci\u00f3k, p\u00e9ld\u00e1ul a leford\u00edtott Java forr\u00e1s k\u00f3d tulajdons\u00e1gai f\u00e1jlokat, amelyek tartalmazhatnak hiteles\u00edt\u0151 adatokat. Java oszt\u00e1lyok telep\u00edtve az alkalmaz\u00e1s \u00f6sszezavarva, mint egy \u00fajabb r\u00e9teg v\u00e9delem "v\u00e9delem-a-m\u00e9lys\u00e9g" megk\u00f6zel\u00edt\u00e9s.

ascanbeta.sourcecodedisclosurewebinf.propertiesfile.name=Properties File Disclosure - /WEB-INF folder
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.desc=Egy Java oszt\u00e1ly a /WEB-INF mapp\u00e1t nyilv\u00e1noss\u00e1gra a jelenl\u00e9te a tulajdons\u00e1gokat a f\u00e1jl. Tulajdons\u00e1gok f\u00e1jl nem az a c\u00e9lja, hogy nyilv\u00e1nosan hozz\u00e1f\u00e9rhet\u0151, \u00e1ltal\u00e1ban tartalmaznak konfigur\u00e1ci\u00f3s adatok, alkalmaz\u00e1s adatait, vagy kriptogr\u00e1fiai kulcsokat.   
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.soln=The web server should be configured to not serve the /WEB-INF folder or its contents to web browsers.  It may also be possible to remove the /WEB-INF folder.  
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.extrainfo=The reference to the properties file was found in the dis-assembled Java source code for Java class [{0}].

ascanbeta.usernameenumeration.name=Possible Username Enumeration
ascanbeta.usernameenumeration.desc=Lehet, hogy felsorolni felhaszn\u00e1l\u00f3n\u00e9v alapj\u00e1n elt\u00e9r\u0151 HTTP v\u00e1laszok, amikor az \u00e9rv\u00e9nyes vagy \u00e9rv\u00e9nytelen felhaszn\u00e1l\u00f3nevet biztos\u00edtott. Ez nagyban n\u00f6veli a siker val\u00f3sz\u00edn\u0171s\u00e9ge jelsz\u00f3 brute-k\u00e9nyszer\u00edtve t\u00e1mad\u00e1sok ellen a rendszer. Vegye figyelembe, hogy a t\u00e9ves pozit\u00edv, lehet, hogy n\u00e9ha minim\u00e1lisra kell cs\u00f6kkenteni az\u00e1ltal, hogy n\u00f6veli a T\u00e1mad\u00e1s Ereje' Opci\u00f3t ZAP. K\u00e9rj\u00fck, k\u00e9zzel ellen\u0151rizze, hogy a 'T\u00f6bbi Info mez\u0151t, er\u0151s\u00edtse meg, ha ez val\u00f3ban egy probl\u00e9ma. 
ascanbeta.usernameenumeration.soln=Nem mondom el a r\u00e9szleteket, hogy a megadott felhaszn\u00e1l\u00f3n\u00e9v \u00e9rv\u00e9nyes vagy \u00e9rv\u00e9nytelen. K\u00fcl\u00f6n\u00f6sen a sikertelen bejelentkez\u00e9si k\u00eds\u00e9rletek, nem k\u00fcl\u00f6nb\u00f6ztetik \u00e9rv\u00e9nytelen felhaszn\u00e1l\u00f3 \u00e9rv\u00e9nytelen jelsz\u00f3t a hiba\u00fczenet, akkor az oldal c\u00edme, oldal tartalm\u00e1t, HTTP fejl\u00e9cek, vagy \u00e1tir\u00e1ny\u00edt\u00e1s logika.
ascanbeta.usernameenumeration.refs=https\://www.owasp.org/index.php/Testing_for_user_enumeration_%28OWASP-AT-002%29\nhttp\://sebastian-schinzel.de/_download/ifip-sec2011.pdf
ascanbeta.usernameenumeration.alert.extrainfo=[{0}] parameter [{1}] leaks information on whether a user exists. The [{5}] differences in output, for the valid original username value [{2}], and invalid username value [{3}] are\:\n[{4}]
ascanbeta.usernameenumeration.alert.attack=Manipulate [{0}] field\: [{1}] and monitor the output 

ascanbeta.paddingoracle.name=Generic Padding Oracle
ascanbeta.paddingoracle.desc=Manipul\u00e1l\u00e1s\u00e1val a padding k\u00f3dolt string, a t\u00e1mad\u00f3 k\u00e9pes gener\u00e1lni egy hiba\u00fczenet azt jelzi, hogy val\u00f3sz\u00edn\u0171leg 'padding oracle' biztons\u00e1gi r\u00e9s. Egy ilyen biztons\u00e1gi r\u00e9s hat\u00e1ssal lehet b\u00e1rmilyen alkalmaz\u00e1s vagy keretet haszn\u00e1l titkos\u00edt\u00e1st nem megfelel\u0151en, p\u00e9ld\u00e1ul egyes verzi\u00f3k ASP.net Java Server Arcok, Mono. A t\u00e1mad\u00f3 haszn\u00e1lhatja ezt a k\u00e9rd\u00e9st adatok titkos\u00edt\u00e1s\u00e1t, illetve vissza\u00e1ll\u00edtani a titkos\u00edt\u00e1si kulcsokat, potenci\u00e1lisan megtekint\u00e9se, m\u00f3dos\u00edt\u00e1sa bizalmas adatok. Ez a plugin \u00e9rz\u00e9keli az MS10-070 padding oracle biztons\u00e1gi r\u00e9s ASP.net ha CustomErrors enged\u00e9lyezve vannak.
ascanbeta.paddingoracle.soln=Update the affected server software, or modify the scripts so that they properly validate encrypted data before attempting decryption.
ascanbeta.paddingoracle.refs=http\://netifera.com/research/\nhttp\://www.microsoft.com/technet/security/bulletin/ms10-070.mspx\nhttp\://www.mono-project.com/Vulnerabilities\#ASP.NET_Padding_Oracle\nhttps\://bugzilla.redhat.com/show_bug.cgi?id\=623799

ascanbeta.elinjection.name=Expression Language Injection
ascanbeta.elinjection.desc=A szoftver l\u00e9trehoz egy r\u00e9sz\u00e9t vagy eg\u00e9sz\u00e9t egy kifejez\u00e9s nyelv (EL) nyilatkozata a Java Szerver Oldalon (JSP) haszn\u00e1lata k\u00fcls\u0151leg ihlet\u00e9s\u0171 bemenet egy felfel\u00e9 ir\u00e1nyul\u00f3 \u00f6sszetev\u0151je, de nem semleges\u00edteni, vagy helytelen\u00fcl semleges\u00edti a k\u00fcl\u00f6nleges elemeket, hogy lehet m\u00f3dos\u00edtani a tervezett EL a nyilatkozatot, miel\u0151tt kiv\u00e9gezt\u00e9k. Egyes verzi\u00f3iban a Tavasz 3.0.5 kor\u00e1bban volt egy r\u00e9s (CVE-2011-2730), amely Kifejez\u00e9s Nyelvi kateg\u00f3ria lenne \u00e9rt\u00e9kelni, k\u00e9tszer, amely hat\u00e9konyan t\u00e9ve b\u00e1rmely alkalmaz\u00e1s, hogy EL injekci\u00f3. Azonban m\u00e9g a k\u00e9s\u0151bbi verzi\u00f3kban ez a gyenges\u00e9g m\u00e9g mindig lehets\u00e9ges a konfigur\u00e1ci\u00f3t\u00f3l f\u00fcgg\u0151en.
ascanbeta.elinjection.soln=Perform data validation best practice against untrusted input and to ensure that output encoding is applied when data arrives on the EL layer, so that no metacharacter is found by the interpreter within the user content before evaluation. The most obvious patterns to detect include ${ and \#{, but it may be possible to encode or fragment this data.
ascanbeta.elinjection.refs=https\://www.owasp.org/index.php/Expression_Language_Injection\nhttp\://cwe.mitre.org/data/definitions/917.html

ascanbeta.xxeplugin.name=XML External Entity Attack
ascanbeta.xxeplugin.nocallback=callback functionality not available

ascanbeta.xpathinjectionplugin.name=XPath Injection

