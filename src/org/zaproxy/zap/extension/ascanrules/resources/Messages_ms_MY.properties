#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

ascanrules.desc=Arahan Imbas Aktif

ascanrules.bufferoverflow.name=Limpahan Penampan
ascanrules.bufferoverflow.desc=Penampan limpahan kesilapan ditandai oleh penggantian memori ruang latar belakang web proses, yang seharusnya tidak pernah telah diubah secara sengaja atau tidak sengaja, Penggantian nilai-nilai PA (Pointer Arahan), PA (Pangkalan Penunjuk) dan daftar lain menyebabkan pengecualian, segmen kesalahan, dan proses yang lain kesilapan yang berlaku. Biasanya ini kesilapan akhir pelaksanaan permohonan dalam cara yang tidak dijangka. 
ascanrules.bufferoverflow.soln=Menulis semula program latar belakang menggunakan pemeriksaan pemulangan panjang yang betul. Ini akan memerlukan penyusunan semula kebolehlakuan latar belakang.
ascanrules.bufferoverflow.refs=https\://www.owasp.org/index.php/Buffer_overflow_attack
ascanrules.bufferoverflow.other=Potensi Penampan Limpahan. Skrip ditutup sambungan dan melemparkan 500 Ralat Pelayan Dalaman


ascanrules.commandinjectionplugin.name=Suntikan Perintah OS Dari Jauh
ascanrules.commandinjectionplugin.desc=Teknik menyerang digunakan untuk pelaksanaan perintah sistem operasi yang tidak sah. Serangan ini boleh dilakukan apabila suatu aplikasi menerima input yang tidak dipercayai untuk membina perintah sistem operasi dengan cara yang tidak selamat melibatkan pembasmian data yang tidak betul, dan/atau pemanggilan program luaran yang tidak betul.
ascanrules.commandinjectionplugin.refs=http\://cwe.mitre.org/data/definitions/78.html\nhttps\://www.owasp.org/index.php/Command_Injection

ascanrules.formatstring.name=Format String Ralat
ascanrules.formatstring.desc=A Format String kesilapan berlaku apabila diserahkan data input string adalah untuk dinilai sebagai perintah oleh aplikasi. 
ascanrules.formatstring.soln=Tulis program latar belakang menggunakan betul penghapusan buruk watak tali. Ini akan memerlukan susun semula latar belakang laku.
ascanrules.formatstring.refs=https\://www.owasp.org/index.php/Format_string_attack
ascanrules.formatstring.error1=Potensi Format String Ralat. Skrip ditutup sambungan pada /%s
ascanrules.formatstring.error2=Potensi Format String Ralat. Skrip ditutup sambungan pada /%s dan /%x
ascanrules.formatstring.error3=Potensi Format String Ralat. Skrip ditutup sambungan pada microsoft format string ralat


ascanrules.testscrosssitescriptv2.name=Cross Tapak Skrip (Reflected)
ascanrules.testscrosssitescriptv2.otherinfo.nothtml=Dibesarkan dengan keyakinan yang RENDAH sebagai Kandungan-Type tidak HTML

ascanrules.testpersistentxssattack.name=Cross Tapak Skrip (Berterusan)
ascanrules.testpersistentxssattack.otherinfo=Sumber URL\: {0}

ascanrules.testpersistentxssprime.name=Cross Tapak Skrip (Berterusan) - Perdana
ascanrules.testpersistentxssprime.misc=N/A

ascanrules.testpersistentxssspider.name=Cross Tapak Skrip (Berterusan) - Labah-Labah
ascanrules.testpersistentxssspider.misc=N/A

ascanrules.testsqlinjection.name=Suntikan SQL
ascanrules.testsqlinjection.desc=Suntikan SQL mungkin boleh dilakukan.
ascanrules.testsqlinjection.soln=Jangan percaya sebelah pelanggan input, bahkan jika ada pelanggan sebelah pengesahan di tempat. Secara umum, jenis periksa semua data dalam pelayan. Jika permohonan menggunakan JDBC, gunakan PreparedStatement atau CallableStatement, dengan parameter berlalu '?' \nJika permohonan menggunakan ASP, gunakan ADO Command Objects with strong type checking dan parameterized queries.\nJika pangkalan data Prosedur yang Disimpan boleh digunakan, menggunakan mereka.\nAdakah *not* concatenate strings into queries in the stored procedure, atau penggunaan 'lakukan', 'exec immediate', or equivalent functionality\!\nJangan membuat dinamik  SQL queries using simple string concatenation.\nMelarikan diri semua data yang diterima dari pelanggan.\nMemohon 'whitelist' aksara yang dibenarkan, atau 'blacklist' tidak dibenarkan aksara di input pengguna.\nMenggunakan prinsip-kurangnya kehormatan dengan menggunakan kurangnya istimewa database pengguna mungkin.\nKhususnya, mengelakkan menggunakan 'sa' atau 'db-owner' database pengguna. Ini tidak menghapuskan SQL injection, tapi mengurangkan kesannya.\nGrant minimum akses pangkalan data itu necessary untuk permohonan.
ascanrules.testsqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanrules.testsqlinjection.alert.errorbased.attack=[{0}] bidang\: [{1}], nilai [{2}]
ascanrules.testsqlinjection.alert.errorbased.differentiation.attack=Asal Nilai\: [{0}]. Suai Nilai\: [{1}]. Kawalan Nilai\: [{2}]
ascanrules.testsqlinjection.alert.booleanbased.attack=[{0}] bidang\: [{1}], nilai [{2}]
ascanrules.testsqlinjection.alert.unionbased.attack=[{0}] bidang\: [{1}], nilai [{2}]
ascanrules.testsqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] mungkin, memberikan mesej ungkapan biasa [{1}] dipadankan dengan HTML results.\nKelemahan telah dikesan oleh memanipulasi parameter untuk menyebabkan pangkalan data ralat pesan untuk kembali dan diakui
ascanrules.testsqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] likely, given UNION-specific error message regular expression [{1}] matched by the HTML results\nThe vulnerability was detected by manipulating the parameter with an SQL ''UNION'' clause to cause a database error message to be returned and recognised
ascanrules.testsqlinjection.alert.expressionbased.extrainfo=The original page results were successfully replicated using the expression [{0}] as the parameter value\nThe parameter value being modified was {1}stripped from the HTML output for the purposes of the comparison
ascanrules.testsqlinjection.alert.orderbybased.extrainfo=The original page results were successfully replicated using the "ORDER BY" expression [{0}] as the parameter value\nThe parameter value being modified was {1}stripped from the HTML output for the purposes of the comparison
ascanrules.testsqlinjection.alert.errorbased.httpstatuscode.extrainfo=Unmodified message gave HTTP status [{0}], modified message gave HTTP status [{1}]
ascanrules.testsqlinjection.alert.errorbased.differentiation.extrainfo=Unmodified message gave HTTP status [{0}], body of length [{1}], modified message gave HTTP status [{2}], body of length [{3}]. A third (non-SQL injection inducing value) gave HTTP status [{4}], body of length [{5}]
ascanrules.testsqlinjection.alert.booleanbased.extrainfo=The page results were successfully manipulated using the boolean conditions [{0}] and [{1}]\nThe parameter value being modified was {2}stripped from the HTML output for the purposes of the comparison
ascanrules.testsqlinjection.alert.booleanbased.extrainfo.dataexists=Data was returned for the original parameter.\nThe vulnerability was detected by successfully restricting the data originally returned, by manipulating the parameter
ascanrules.testsqlinjection.alert.booleanbased.extrainfo.datanotexists=Data was NOT returned for the original parameter.\nThe vulnerability was detected by successfully retrieving more data than originally returned, by manipulating the parameter
ascanrules.testsqlinjection.alert.timebased.extrainfo=The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, when the original unmodified query with value [{2}] took [{3}] milliseconds 
ascanrules.testsqlinjection.authbypass.name=SQL Injection - Authentication Bypass
ascanrules.testsqlinjection.authbypass.desc=SQL injection may be possible on a login page, potentially allowing the application's authentication mechanism to be bypassed 

ascanrules.testexternalredirect.name=External Redirect
ascanrules.testexternalredirect.reason.location.header=Maklum balas mengandungi suatu lencongan dalam tajuk Lokasinya yang membolehkan suatu Url luaran ditetapkan.
ascanrules.testexternalredirect.reason.location.meta=The response contains a redirect in its meta http-equiv tag for 'Location' which allows an external Url to be set.
ascanrules.testexternalredirect.reason.refresh.header=The response contains a redirect in its Refresh header which allows an external Url to be set.
ascanrules.testexternalredirect.reason.refresh.meta=The response contains a redirect in its meta http-equiv tag for 'Refresh' which allows an external Url to be set.
ascanrules.testexternalredirect.reason.javascript=The response contains a redirect in its JavaScript code which allows an external Url to be set.
ascanrules.testexternalredirect.reason.notfound=No reason found for it...

ascanrules.codeinjectionplugin.name=Server Side Code Injection
ascanrules.codeinjectionplugin.name.asp=Server Side Code Injection - ASP Code Injection
ascanrules.codeinjectionplugin.name.php=Server Side Code Injection - PHP Code Injection
ascanrules.codeinjectionplugin.desc=A code injection may be possible including custom code that will be evaluated by the scripting engine
ascanrules.codeinjectionplugin.soln=Do not trust client side input, even if there is client side validation in place.\nIn general, type check all data on the server side and escape all data received from the client.\n Avoid the use of eval() functions combined with user input data.
ascanrules.codeinjectionplugin.refs=http\://cwe.mitre.org/data/definitions/94.html\nhttps\://www.owasp.org/index.php/Direct_Dynamic_Code_Evaluation_('Eval_Injection')

ascanrules.testdirectorybrowsing.name=Directory Browsing
ascanrules.testdirectorybrowsing.desc=Ia adalah mungkin untuk melihat direktori.  Direktori mungkin mendedahkan tersembunyi skrip, termasuk file , backup sumber fail  etc yang boleh diakses untuk membaca informasi sensitif.
ascanrules.testdirectorybrowsing.soln=Disable directory browsing.  If this is required, make sure the listed files does not induce risks.
ascanrules.testdirectorybrowsing.refs=http\://httpd.apache.org/docs/mod/core.html\#options\nhttp\://alamo.satlug.org/pipermail/satlug/2002-February/000053.html\n

ascanrules.testinjectioncrlf.name=CRLF Injection
ascanrules.testinjectioncrlf.desc=Cookie can be set via CRLF injection.  It may also be possible to set arbitrary HTTP response headers. In addition, by carefully crafting the injected response using cross-site script, cache poisoning vulnerability may also exist.
ascanrules.testinjectioncrlf.soln=Type check the submitted parameter carefully.  Do not allow CRLF to be injected by filtering CRLF.
ascanrules.testinjectioncrlf.refs=http\://www.watchfire.com/resources/HTTPResponseSplitting.pdf\nhttp\://webappfirewall.com/lib/crlf-injection.txtnull\nhttp\://www.securityfocus.com/bid/9804

ascanrules.testparametertamper.name=Parameter Tampering
ascanrules.testparametertamper.desc=Parameter manipulation caused an error page or Java stack trace to be displayed.  This indicated lack of exception handling and potential areas for further exploit.
ascanrules.testparametertamper.soln=Identify the cause of the error and fix it.  Do not trust client side input and enforce a tight check in the server side.  Besides, catch the exception properly.  Use a generic 500 error page for internal server error.

ascanrules.testpathtraversal.name=Path Traversal

ascanrules.testremotefileinclude.name=Remote File Inclusion

ascanrules.testserversideinclude.name=Server Side Include
ascanrules.testserversideinclude.desc=Certain parameters may cause Server Side Include commands to be executed.  This may allow database connection or arbitrary code to be executed.
ascanrules.testserversideinclude.soln=Do not trust client side input and enforce a tight check in the server side.  Disable server side includes.\n
Refer=to manual to disable Sever Side Include.\n\nUse least privilege to run your web server or application server.\n\nFor Apache, disable the following\:\n\nOptions Indexes FollowSymLinks Includes\n\nAddType application/x-httpd-cgi .cgi\n\nAddType text/x-server-parsed-html .html
ascanrules.testserversideinclude.refs=http\://www.carleton.ca/~dmcfet/html/ssi.html

