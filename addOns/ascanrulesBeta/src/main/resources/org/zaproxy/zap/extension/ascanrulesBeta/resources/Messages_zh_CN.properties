ascanbeta.HTTPParamPoll.alert.attack = HTTP \u53c2\u6570\u6c61\u67d3
ascanbeta.HTTPParamPoll.desc = HTTP\u53c2\u6570\u6c61\u67d3\uff08HPP\uff09\u653b\u51fb\u5305\u62ec\u5c06\u7f16\u7801\u7684\u67e5\u8be2\u5b57\u7b26\u4e32\u5206\u9694\u7b26\u6ce8\u5165\u5230\u5176\u4ed6\u73b0\u6709\u53c2\u6570\u4e2d\u3002\u5982\u679cweb\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u9002\u5f53\u51c0\u5316\u7528\u6237\u6240\u8f93\u5165\u7684\u6570\u636e\uff0c\u6076\u610f\u7528\u6237\u5c31\u53ef\u80fd\u7834\u574f\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\uff0c\u6765\u6267\u884c\u5ba2\u6237\u7aef\u6216\u670d\u52a1\u5668\u7aef\u7684\u653b\u51fb\u3002HPP\u653b\u51fb\u7684\u4e00\u4e2a\u540e\u679c\u662f\uff0c\u653b\u51fb\u8005\u6709\u673a\u4f1a\u8986\u76d6\u73b0\u6709\u7684\u786c\u7f16\u7801HTTP\u53c2\u6570\uff0c\u4ece\u800c\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\uff0c\u7ed5\u8fc7\u8f93\u5165\u9a8c\u8bc1\u68c0\u67e5\u70b9\uff0c\u4ee5\u53ca\u8bbf\u95ee\u5e76\u6709\u673a\u4f1a\u5229\u7528\u539f\u672c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u7684\u53d8\u91cf\u3002
ascanbeta.HTTPParamPoll.extrainfo = http\://www.google.com/search?q\=http+parameter+pollution
ascanbeta.HTTPParamPoll.name = HTTP \u53c2\u6570\u6c61\u67d3
ascanbeta.HTTPParamPoll.sol = \u6b63\u786e\u6e05\u7406\u7528\u6237\u8f93\u5165\u7684\u53c2\u6570\u5206\u9694\u7b26

ascanbeta.backupfiledisclosure.desc = \u8be5\u6587\u4ef6\u7684\u5907\u4efd\u7531Web\u670d\u52a1\u5668\u6240\u6cc4\u6f0f
ascanbeta.backupfiledisclosure.evidence = \u5728[{1}]\u6709\u4e00\u4efd[{0}]\u7684\u5907\u4efd\u53ef\u7528
ascanbeta.backupfiledisclosure.name = \u5907\u4efd\u6587\u4ef6\u6cc4\u9732
ascanbeta.backupfiledisclosure.refs = https\://cwe.mitre.org/data/definitions/530.html\nhttps\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/04-Review_Old_Backup_and_Unreferenced_Files_for_Sensitive_Information.html
ascanbeta.backupfiledisclosure.soln = \u4e0d\u539f\u4f4dWeb\u670d\u52a1\u5668\u4e0a\u7f16\u8f91\u6587\u4ef6\uff0c\u5e76\u4e14\u786e\u4fdd\u975e\u5fc5\u8981\u7684\u6587\u4ef6\uff08\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff09\u4eceWeb\u670d\u52a1\u5668\u4e0a\u5220\u9664\u3002

ascanbeta.cookieslack.affect.response.no = \u8fd9\u4e9b Cookie *\u4e0d*\u5f71\u54cd\u670d\u52a1\u5668\u7684\u54cd\u5e94\uff1a 
ascanbeta.cookieslack.affect.response.yes = \u8fd9\u4e9b Cookie \u5f71\u54cd\u670d\u52a1\u5668\u7684\u54cd\u5e94\uff1a 
ascanbeta.cookieslack.desc = \u91cd\u590d\u53d1\u9001GET\u8bf7\u6c42\uff1a\u6bcf\u6b21\u4f7f\u7528\u4e0d\u540c\u7684 Cookie \u548c\u666e\u901a\u7684GET\u8bf7\u6c42\u3002\u8fd9\u6837\u6765\u6d4b\u8bd5\u8fde\u63a5\u72b6\u6001\u7684\u7a33\u5b9a\u6027\u5e76\u6bd4\u8f83\u6d4b\u8bd5\u56de\u590d\u548c\u6807\u51c6GET\u8bf7\u6c42\u7684\u6807\u51c6\u56de\u590d\u3002\u8fd9\u6837\u80fd\u68c0\u6d4b\u57fa\u4e8e cookie \u7684\u8ba4\u8bc1\u65b9\u6cd5\u662f\u5426\u6709\u6548\u3002
ascanbeta.cookieslack.endline = \n
ascanbeta.cookieslack.name = \u6709\u6548 Cookie \u68c0\u6d4b\u5668
ascanbeta.cookieslack.otherinfo.intro = \u5df2\u77e5\u65e0\u6548\u7684 Cookie \u53ef\u4ee5\u68c0\u6d4b\u7a0b\u5e8f\u903b\u8f91\u9519\u8bef\u3002\u81f3\u5c11\u8fd9\u6837\u53ef\u4ee5\u68c0\u67e5\u51fa\u6765\u57fa\u4e8e Cookie \u7684\u8eab\u4efd\u8ba4\u8bc1\u7684\u6709\u6548\u6027\u3002\n
ascanbeta.cookieslack.separator = ,
ascanbeta.cookieslack.session.destroyed = \u5220\u9664\u6b64 Cookie \u5c06\u4f1a\u4f7f\u672c\u6b21\u8fde\u63a5\u4f1a\u8bdd\u65e0\u6548\uff1a[{0}] \u540e\u7eed\u4f7f\u7528\u8fd9\u4e9b Cookie \u7684\u8bf7\u6c42\u5c06\u5f97\u5230\u4e0e\u539f\u59cb\u8bf7\u6c42\u4e0d\u540c\u7684\u670d\u52a1\u5668\u54cd\u5e94\u3002\n
ascanbeta.cookieslack.session.warning = \u6ce8\u610f\uff1a\u7531\u4e8e\u5176\u540d\u79f0\uff0c\u6b64 Cookie \u53ef\u80fd\u5f88\u91cd\u8981\uff0c\u4f46\u5220\u9664\u5b83\u4f3c\u4e4e\u6ca1\u6709\u6548\u679c\uff1a[{0}]

ascanbeta.cors.info.desc = \u8de8\u6e90\u8d44\u6e90\u5171\u4eab (CORS) \u662f\u4e00\u79cd\u57fa\u4e8e HTTP \u6807\u5934\u7684\u673a\u5236\uff0c\u5b83\u5141\u8bb8\u670d\u52a1\u5668\u6307\u793a\u6d4f\u89c8\u5668\u5e94\u5141\u8bb8\u4ece\u5176\u52a0\u8f7d\u8d44\u6e90\u7684\u4efb\u4f55\u5176\u4ed6\u6765\u6e90\uff08\u57df\u3001\u6a21\u5f0f\uff08scheme\uff09\u6216\u7aef\u53e3\uff09\u3002 \u5b83\u653e\u5bbd\u4e86\u540c\u6e90\u7b56\u7565\uff08SOP\uff09\u3002
ascanbeta.cors.info.name = CORS Header
ascanbeta.cors.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\nhttps\://portswigger.net/web-security/cors
ascanbeta.cors.soln = \u5982\u679c Web \u8d44\u6e90\u5305\u542b\u654f\u611f\u4fe1\u606f\uff0c\u5219\u5e94\u5728 Access-Control-Allow-Origin \u6807\u5934\u4e2d\u6b63\u786e\u6307\u5b9a\u6765\u6e90\u3002 \u4ec5\u5e94\u5728\u6b64\u6807\u5934\u4e2d\u6307\u5b9a\u9700\u8981\u6b64\u8d44\u6e90\u7684\u53d7\u4fe1\u4efb\u7f51\u7ad9\uff0c\u5e76\u652f\u6301\u6700\u5b89\u5168\u7684\u534f\u8bae\u3002
ascanbeta.cors.vuln.desc = \u8fd9\u79cd CORS \u9519\u8bef\u914d\u7f6e\u53ef\u80fd\u5141\u8bb8\u653b\u51fb\u8005\u4ece\u53d7\u5bb3\u8005\u7684\u7528\u6237\u4ee3\u7406\uff08user agent\uff09\u52a0\u8f7d\u7684\u6076\u610f\u9875\u9762\u5411\u6613\u53d7\u653b\u51fb\u7684\u7f51\u7ad9\u6267\u884c AJAX \u67e5\u8be2\u3002\n\u4e3a\u4e86\u6267\u884c\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684 AJAX \u67e5\u8be2\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u6307\u5b9a\u6807\u5934\u201cAccess-Control-Allow-Credentials\: true\u201d\uff0c\u5e76\u4e14\u201cAccess-Control-Allow-Origin\u201d\u6807\u5934\u5fc5\u987b\u8bbe\u7f6e\u4e3a null \u6216\u6076\u610f\u9875\u9762\u7684\u57df\u3002 \u5373\u4f7f\u6b64\u9519\u8bef\u914d\u7f6e\u4e0d\u5141\u8bb8\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684 AJAX \u8bf7\u6c42\uff0c\u4ecd\u53ef\u4ee5\u8bbf\u95ee\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u654f\u611f\u5185\u5bb9\uff08\u4f8b\u5982\u5185\u7f51\u7f51\u7ad9\uff09\u3002\n\u6076\u610f\u9875\u9762\u53ef\u80fd\u5c5e\u4e8e\u6076\u610f\u7f51\u7ad9\uff0c\u4f46\u4e5f\u53ef\u80fd\u5c5e\u4e8e\u5b58\u5728\u7f3a\u9677\u7684\u53d7\u4fe1\u4efb\u7f51\u7ad9\uff08\u4f8b\u5982 XSS\u3001\u4e0d\u652f\u6301\u901a\u8fc7 MITM \u6ce8\u5165\u4ee3\u7801\u7684\u4e0d\u5e26 TLS \u7684 HTTP \u7b49\uff09\u3002
ascanbeta.cors.vuln.name = CORS \u9519\u8bef\u914d\u7f6e

ascanbeta.crossdomain.adobe.desc = \u7531\u4e8eWeb\u670d\u52a1\u5668\u4e0a\u7684\u9519\u8bef\u914d\u7f6e\uff0c\u57fa\u4e8eFlash/Silverlight\u7684\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\u6709\u53ef\u80fd\u53d1\u751f\u3002 
ascanbeta.crossdomain.adobe.read.extrainfo = Web\u670d\u52a1\u5668\u5141\u8bb8\u6076\u610f\u7684\u8de8\u57df\u6570\u636e\u8bfb\u53d6\u6765\u81ea\u4efb\u4f55\u7b2c\u4e09\u65b9\u57df\u7684Flash/Silverlight\u7ec4\u4ef6\u5411\u6b64\u57df\u53d1\u9001\u7684\u8bf7\u6c42\u3002\u5982\u679c\u53d7\u5bb3\u8005\u7528\u6237\u767b\u5f55\u4e86\u6b64\u670d\u52a1\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528\u53d7\u5bb3\u8005\u7684\u7279\u6743\u5904\u7406\u8fd9\u4e2a\u6076\u610f\u7684\u8bfb\u53d6\u8bf7\u6c42\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u6b64\u670d\u52a1\u53d1\u9001\u7684\u6570\u636e\u88ab\u672a\u7ecf\u6388\u6743\u7684\u7b2c\u4e09\u65b9\u7f51\u7ad9\u4ee5\u53d7\u5bb3\u8005\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u4e3a\u4e2d\u4ecb\u6cc4\u9732\u51fa\u53bb\u3002\u5982\u679c\u4f7f\u7528\u7684\u662f\u57fa\u4e8eCookie\u7684\u4f1a\u8bdd\u5b9e\u73b0\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u5f88\u53ef\u80fd\u53d1\u751f\u3002 
ascanbeta.crossdomain.adobe.read.name = \u8de8\u57df\u914d\u7f6e\u9519\u8bef - Adobe - Read
ascanbeta.crossdomain.adobe.read.soln = \u4f7f\u7528<allow-access-from domain\="example.com">\uff0c\u914d\u7f6ecrossdomain.xml\u6587\u4ef6\u6765\u6536\u7a84\u90a3\u4e9b\u88ab\u5141\u8bb8\u5411\u6b64Web\u670d\u52a1\u5668\u8fdb\u884c\u8de8\u57df\u8bfb\u53d6\u8bf7\u6c42\u7684\u57df\u7684\u540d\u5355\u3002\u53ea\u6709\u5f53\u4f60\u786e\u5b9a\u6b64\u670d\u52a1\u4e0d\u6258\u7ba1\u4efb\u4f55\u53d7\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7684\u3001\u4e2a\u6027\u5316\u7684\u6216\u79c1\u6709\u7684\u6570\u636e\u65f6\uff0c\u4f60\u624d\u5e94\u8be5\u5411\u201c*\u201d\uff08\u6240\u6709\u57df\uff09\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u3002
ascanbeta.crossdomain.adobe.send.extrainfo = Web\u670d\u52a1\u5668\u5141\u8bb8\u6076\u610f\u7684\u8de8\u57df\u6570\u636e\u5411\u6b64\u57df\u53d1\u9001\uff08\u4f46\u4e0d\u4e00\u5b9a\u8bfb\u53d6\uff09\u6765\u81ea\u4efb\u4f55\u7b2c\u4e09\u65b9\u57df\u7684Flash/Silverlight\u7ec4\u4ef6\u7684\u8bf7\u6c42\u3002\u5982\u679c\u53d7\u5bb3\u8005\u7528\u6237\u767b\u5f55\u4e86\u6b64\u670d\u52a1\uff0c\u5c31\u4f1a\u4f7f\u7528\u53d7\u5bb3\u8005\u7684\u7279\u6743\u6765\u5904\u7406\u8fd9\u4e2a\u6076\u610f\u7684\u53d1\u9001\u8bf7\u6c42\uff0c\u5e76\u5c06\u5bfc\u81f4\u4ee5\u53d7\u5bb3\u8005\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u4e3a\u4e2d\u4ecb\u7684\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\uff08CSRF\uff09\u4e00\u7c7b\u7684\u653b\u51fb\u3002\u5982\u679c\u4f7f\u7528\u7684\u662f\u57fa\u4e8eCookie\u7684\u4f1a\u8bdd\u5b9e\u73b0\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u5f88\u53ef\u80fd\u53d1\u751f\u3002
ascanbeta.crossdomain.adobe.send.name = \u8de8\u57df\u914d\u7f6e\u9519\u8bef - Adobe - Send
ascanbeta.crossdomain.adobe.send.soln = \u4f7f\u7528<allow-http-request-headers-from domain\="example.com" headers\="Authorization,X-Blahh">\uff0c\u914d\u7f6ecrossdomain.xml\u6587\u4ef6\u6765\u6536\u7a84\u90a3\u4e9b\u88ab\u5141\u8bb8\u5411\u6b64Web\u670d\u52a1\u5668\u8de8\u57df\u53d1\u9001\uff08\u4f46\u4e0d\u4e00\u5b9a\u8bfb\u53d6\uff09\u8bf7\u6c42\u7684\u57df\u7684\u540d\u5355\u3002\u53ea\u6709\u5f53\u4f60\u786e\u5b9a\u6b64\u670d\u52a1\u4e0d\u5bb9\u6613\u906d\u53d7\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\uff08CSRF\uff09\u653b\u51fb\u65f6\u624d\u5e94\u8be5\u5411\u201c*\u201d\uff08\u6240\u6709\u57df\uff09\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u3002
ascanbeta.crossdomain.name = \u8de8\u57df\u914d\u7f6e\u9519\u8bef
#the refs cannot be customised for each sub-category (Adobe, Silverlight, etc.)
ascanbeta.crossdomain.refs = http\://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html\nhttp\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf\nhttp\://msdn.microsoft.com/en-US/library/cc197955%28v\=vs.95%29.aspx\nhttp\://msdn.microsoft.com/en-us/library/cc838250%28v\=vs.95%29.aspx
ascanbeta.crossdomain.silverlight.desc = \u7531\u4e8eweb\u670d\u52a1\u5668\u4e0a\u7684\u9519\u8bef\u914d\u7f6e\uff0c\u57fa\u4e8eSilverlight\u7684\u8de8\u7ad9\u70b9\u4f2a\u9020\u8bf7\u6c42\u662f\u53ef\u80fd\u7684\u3002
ascanbeta.crossdomain.silverlight.extrainfo = Web\u670d\u52a1\u5668\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u7b2c\u4e09\u65b9\u7684Silverlight\u7ec4\u4ef6\u5411\u672c\u57df\u53d1\u9001\u6076\u610f\u7684\u8de8\u57df\u8bf7\u6c42\u3002\u5728\u53d7\u5bb3\u8005\u7528\u6237\u767b\u5f55\u4e86\u6b64\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u4f1a\u4f7f\u7528\u53d7\u5bb3\u8005\u7684\u7279\u6743\u5904\u7406\u8fd9\u4e9b\u6076\u610f\u8bf7\u6c42\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u6765\u81ea\u6b64\u670d\u52a1\u7684\u6570\u636e\u7ecf\u7531\u53d7\u5bb3\u8005\u7684\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u88ab\u672a\u7ecf\u6388\u6743\u7684\u7b2c\u4e09\u65b9\u7f51\u7ad9\u7834\u574f\u3002\u5b83\u8fd8\u53ef\u4ee5\u5bfc\u81f4\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\uff08CSRF\uff09\u4e00\u7c7b\u7684\u653b\u51fb\u3002\u5f53\u4f7f\u7528\u4e86\u57fa\u4e8eCookie\u7684\u4f1a\u8bdd\u64cd\u4f5c\u65f6\uff0c\u5c24\u5176\u53ef\u80fd\u53d1\u751f\u8fd9\u4e2a\u95ee\u9898\u3002
ascanbeta.crossdomain.silverlight.name = \u8de8\u57df\u914d\u7f6e\u9519\u8bef - Silverlight
ascanbeta.crossdomain.silverlight.soln = \u4f7f\u7528<domain uri\="https\://example.com" />\u6765\u914d\u7f6eclientaccesspolicy.xml\u6587\u4ef6\uff0c\u6765\u6536\u7a84\u90a3\u4e9b\u88ab\u5141\u8bb8\u5411\u6b64Web\u670d\u52a1\u5668\u53d1\u9001\u8de8\u57df\u8bf7\u6c42\u7684\u57df\u7684\u540d\u5355\u3002\u53ea\u6709\u5f53\u4f60\u786e\u5b9a\u6b64\u670d\u52a1\u672a\u6258\u7ba1\u4efb\u4f55\u53d7\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7684\u3001\u4e2a\u6027\u5316\u7684\u6216\u79c1\u6709\u7684\u6570\u636e\u65f6\uff0c\u4f60\u624d\u5e94\u8be5\u5411\u201c*\u201d\uff08\u6240\u6709\u57df\uff09\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u3002

ascanbeta.csrftoken.extrainfo.annotation = \u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\uff0c\u56e0\u4e3a\u8868\u5355\u6709\u4e00\u4e2a\u5b89\u5168\u6ce8\u91ca\uff0c\u8868\u660e\u5b83\u4e0d\u9700\u8981 \u9632-CSRF \u4ee4\u724c\u3002 \u8fd9\u5e94\u8be5\u624b\u52a8\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u6ce8\u91ca\u6b63\u786e\u3002
ascanbeta.csrftoken.name = \u9632-CSRF \u4ee4\u724c\u68c0\u67e5

ascanbeta.desc = Beta \u72b6\u6001\u7684\u4e3b\u52a8\u626b\u63cf\u89c4\u5219

ascanbeta.elinjection.desc = \u8fd9\u4e2a\u8f6f\u4ef6\u53ef\u4ee5\u4f7f\u7528\u4fe1\u606f\u6d41\u4e0a\u6e38\u7ec4\u4ef6\u4f5c\u4e3a\u8f93\u5165\u6784\u9020JSP\u8868\u8fbe\u5f0f\u8bed\u8a00\u7c7b\uff08EL\uff09\u3002\u4f46\u662f\u5728\u6267\u884c\u4e4b\u524d\u4e0d\u80fd\u9664\u53bb\u53ef\u4ee5\u66f4\u6539EL\u8868\u8fbe\u7684\u7279\u6b8a\u5143\u7d20\u3002\u5728Spring3.0.5\u53ca\u5176\u66f4\u65e9\u7684\u67d0\u4e9b\u7248\u672c\uff0c\u7531\u4e8eEL\u6807\u8bb0\u7b26\u4f1a\u88ab\u89e3\u91ca\u4e24\u6b21\uff0c\u4e00\u4e9b\u7f51\u7edc\u7a0b\u5e8f\u5f88\u5bb9\u6613\u53d7\u5230EL\u6ce8\u5165\u653b\u51fb\uff08\u8be6\u89c1CVE-2011-2730\uff09\u3002\u4f46\u662fSpring\u540e\u7eed\u7248\u672c\u7531\u4e8e\u914d\u7f6e\u7684\u539f\u56e0\u4ecd\u53ef\u80fd\u6709\u540c\u6837\u7684\u6f0f\u6d1e\u3002
ascanbeta.elinjection.name = \u8868\u8fbe\u5f0f\u8bed\u8a00\u7c7b\u6ce8\u5165\u653b\u51fb
ascanbeta.elinjection.refs = https\://owasp.org/www-community/vulnerabilities/Expression_Language_Injection\nhttp\://cwe.mitre.org/data/definitions/917.html
ascanbeta.elinjection.soln = \u4e0d\u53ef\u4fe1\u8f93\u5165\u6570\u636e\u6709\u6548\u6027\u68c0\u9a8c\u548c\u4fdd\u8bc1\u8f93\u51fa\u7ed3\u679c\u6b63\u786e\u7f16\u7801\u7684\u6700\u597d\u65f6\u673a\u662f\u5f53\u6570\u636e\u5230\u8fbeEL\u5c42\u7684\u65f6\u5019\u3002\u8fd9\u662f\u56e0\u4e3a\u6b64\u65f6\u5728\u7528\u6237\u63d0\u4ea4\u7684\u5185\u5bb9\u5728\u88ab\u5904\u7406\u4e4b\u524d\u6ca1\u6709\u89e3\u91ca\u5668\u9700\u8981\u5904\u7406\u7684\u5143\u5b57\u7b26\u3002\u6700\u660e\u663e\u7684EL\u8868\u8fbe\u5f0f\u5305\u62ec ${ \u548c\#{\uff0c \u4f46\u8fd9\u5199\u8868\u8fbe\u5f0f\u53ef\u80fd\u4f1a\u88ab\u7f16\u7801\u5904\u7406\u6389\u6216\u662f\u88ab\u5206\u89e3\u5904\u7406\u3002

ascanbeta.entityExpansion.desc = \u6307\u6570\u5b9e\u4f53\u6269\u5c55\uff0c\u6216\u79f0\u4e3a \u201c\u5341\u4ebf\u7b11\uff08billion laughs\uff09\u201d\u653b\u51fb\u662f\u4e00\u79cd\u62d2\u7edd\u670d\u52a1 (DoS) \u653b\u51fb\u3002 \u5b83\u9488\u5bf9\u5141\u8bb8\u5b8f\u6269\u5c55\u7684\u6807\u8bb0\u8bed\u8a00\uff08\u5982 XML \u6216 YAML\uff09\u7684\u89e3\u6790\u5668\u3002
ascanbeta.entityExpansion.name = \u6307\u6570\u5b9e\u4f53\u6269\u5c55\uff08Billion Laughs \u653b\u51fb\uff09
ascanbeta.entityExpansion.other = \u653b\u51fb HTTP \u8bf7\u6c42\u5728 {0} \u79d2\u540e\u6536\u5230\u54cd\u5e94\u3002
ascanbeta.entityExpansion.refs = https\://en.wikipedia.org/wiki/Billion_laughs_attack\nhttp\://projects.webappsec.org/XML-Entity-Expansion\nhttp\://cwe.mitre.org/data/definitions/776.html
ascanbeta.entityExpansion.soln = \u62b5\u5fa1\u8fd9\u79cd\u653b\u51fb\u7684\u65b9\u6cd5\u5305\u62ec\uff1a\u5982\u679c\u6587\u6863\u4e22\u5931\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u5219\u9650\u5236\u5728\u5355\u4e2a\u89e3\u6790\u5668\u4e2d\u5206\u914d\u7684\u5185\u5b58\uff0c\u6216\u8005\u8c61\u5f81\u6027\u5730\u5bf9\u5f85\u5b9e\u4f53\u5e76\u4ec5\u5728\uff08\u5e76\u4e14\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff09\u4f7f\u7528\u5b83\u4eec\u7684\u5185\u5bb9\u65f6\u624d\u5ef6\u8fdf\u6269\u5c55\u5b83\u4eec\u3002

ascanbeta.forbiddenBypass.desc = \u7ed5\u8fc7 403 \u7aef\u70b9\u662f\u53ef\u80fd\u7684\uff0c\u626b\u63cf\u89c4\u5219\u53d1\u9001\u4e86\u4e00\u4e2a\u8d1f\u8f7d\uff0c\u5bfc\u81f4\u54cd\u5e94\u53d8\u4e3a\u53ef\u8bbf\u95ee\uff08\u72b6\u6001\u4ee3\u7801 200\uff09\u3002
ascanbeta.forbiddenBypass.name = \u7ed5\u8fc7 403
ascanbeta.forbiddenBypass.refs = https\://www.acunetix.com/blog/articles/a-fresh-look-on-reverse-proxy-related-attacks/\nhttps\://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf\nhttps\://www.contextis.com/en/blog/server-technologies-reverse-proxy-bypass

ascanbeta.httponlysite.desc = \u8fd9\u4e2a\u7ad9\u70b9\u53ea\u4f7f\u7528HTTP\u534f\u8bae\u800c\u4e0d\u4f7f\u7528HTTPS\u534f\u8bae
ascanbeta.httponlysite.name = \u53ea\u4f7f\u7528HTTP\u7684\u7ad9\u70b9
ascanbeta.httponlysite.otherinfo = {0}\nZAP\u8bd5\u56fe\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u94fe\u63a5\uff1a{1}
ascanbeta.httponlysite.otherinfo.connectionfail = \u65e0\u6cd5\u8fde\u63a5
ascanbeta.httponlysite.otherinfo.differenthosts = \u4e0d\u540c\u4e3b\u673a
ascanbeta.httponlysite.otherinfo.noredirection = \u6ca1\u6709\u81ea\u52a8\u91cd\u5b9a\u5411\u8df3\u8f6c\u3002
ascanbeta.httponlysite.otherinfo.nossl = \u7f51\u7ad9\u4e0d\u652f\u6301 SSL/TLS \u3002
ascanbeta.httponlysite.otherinfo.redirectionlimit = \u91cd\u5b9a\u5411\u8df3\u8f6c\u6b21\u6570\u8fbe\u5230\u4e0a\u9650\u3002
ascanbeta.httponlysite.otherinfo.redirecttohttp = \u91cd\u5b9a\u5411\u5230HTTP\u3002
ascanbeta.httponlysite.otherinfo.urinotencoded = \u91cd\u5b9a\u5411 URI \u4e0d\u80fd\u8fdb\u884c\u7f16\u7801
ascanbeta.httponlysite.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html\nhttps\://letsencrypt.org/
ascanbeta.httponlysite.soln = \u914d\u7f6e\u4f60\u7684\u7f51\u7ad9\u6216\u670d\u52a1\u5668\u4f7f\u7528 SSL \u5b89\u5168\u534f\u8bae\uff08https\uff09\u3002

ascanbeta.httpoxy.desc = The server initiated a proxied request via the proxy specified in the HTTP Proxy header of the request.Httpoxy typically affects code running in CGI or CGI like environments.\nThis may allow attackers to\:\n* Proxy the outgoing HTTP requests made by the web application\n* Direct the server to open outgoing connections to an address and port of their choosing or\n* Tie up server resources by forcing the vulnerable software to use a malicious proxy
ascanbeta.httpoxy.name = Httpoxy - \u4ee3\u7406\u6807\u5934\u6ee5\u7528
ascanbeta.httpoxy.otherinfo = \u53d1\u5f80 {0} \u7684\u4f20\u51fa\u6d88\u606f\u662f\u901a\u8fc7 ZAP \u6ce8\u5165 HTTP \u4ee3\u7406\u6807\u5934\u7684\u4e3b\u673a\u548c\u7aef\u53e3\u8fdb\u884c\u4ee3\u7406\u7684\u3002
ascanbeta.httpoxy.refs = https\://httpoxy.org/
ascanbeta.httpoxy.skipped = \u7f51\u7edc\u6269\u5c55\u88ab\u7981\u7528
ascanbeta.httpoxy.soln = \u6700\u597d\u7684\u7acb\u5373\u7f13\u89e3\u63aa\u65bd\u662f\u5728\u4ee3\u7406\u8bf7\u6c42\u6807\u5934\u5230\u8fbe\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u524d\u5c3d\u65e9\u963b\u6b62\u5b83\u4eec\u3002

ascanbeta.httpsashttp.desc = \u6700\u521d\u901a\u8fc7 HTTPS\uff08\u5373\uff1a\u4f7f\u7528 SSL/TLS \u52a0\u5bc6\uff09\u8bbf\u95ee\u7684\u5185\u5bb9\u4e5f\u53ef\u4ee5\u901a\u8fc7 HTTP\uff08\u4e0d\u52a0\u5bc6\uff09\u8bbf\u95ee\u3002
ascanbeta.httpsashttp.name = \u901a\u8fc7 HTTP \u83b7\u53d6 HTTPS \u5185\u5bb9
ascanbeta.httpsashttp.otherinfo = ZAP \u8bd5\u56fe\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u8fde\u63a5\: {0}
ascanbeta.httpsashttp.refs = https\://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps\://owasp.org/www-community/Security_Headers\nhttp\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp\://caniuse.com/stricttransportsecurity\nhttp\://tools.ietf.org/html/rfc6797
ascanbeta.httpsashttp.soln = \u786e\u4fdd\u60a8\u7684 Web \u670d\u52a1\u5668\u3001\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u3001\u8d1f\u8f7d\u5e73\u8861\u5668\u7b49\u914d\u7f6e\u4e3a\u4ec5\u901a\u8fc7 HTTPS \u63d0\u4f9b\u6b64\u7c7b\u5185\u5bb9\u3002 \u8003\u8651\u5b9e\u65bd HTTP \u4e25\u683c\u4f20\u8f93\u5b89\u5168\u3002

ascanbeta.insecurehttpmethod.connect.exploitable.desc = \u5411\u6b64\u8d44\u6e90\u542f\u7528\u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5[{0}]\uff0c\u8fd9\u662f\u53ef\u88ab\u5229\u7528\u7684\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u901a\u8fc7\u4f7f\u7528\u8fd9\u79cdHTTP\u65b9\u6cd5\uff0c\u6709\u53ef\u80fd\u4e0e\u7b2c\u4e09\u65b9\u670d\u52a1\u5efa\u7acb\u8d77\u4e00\u4e2a\u96a7\u9053\u5f0f\u7684\u5957\u63a5\u5b57\u8fde\u63a5\u3002\u8fd9\u6837\u5c06\u5141\u8bb8\u6b64\u670d\u52a1\u4f5c\u4e3a\u533f\u540d\u5783\u573e\u90ae\u4ef6\u4f20\u9012\uff0c\u6216\u4f5c\u4e3aWeb\u4ee3\u7406\u6765\u7ed5\u8fc7\u7f51\u7edc\u9650\u5236\u3002\u800c\u4e14\uff0c\u8fd8\u5141\u8bb8\u4f7f\u7528\u6b64\u670d\u52a1\u6765\u5efa\u7acb\u4e00\u4e2a\u96a7\u9053\u5f0fVPN\uff0c\u6709\u6548\u5730\u6269\u5c55\u7f51\u7edc\u5468\u754c\uff0c\u5c06\u4e0d\u53d7\u4fe1\u4efb\u7684\u7ec4\u4ef6\u4e5f\u5305\u62ec\u8fdb\u6765\u3002 
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo = \u8fd9\u79cd\u8fde\u63a5\u65b9\u6cd5\u7528\u6765\u5efa\u7acb\u4e00\u4e2a\u901a\u8fc7web\u670d\u52a1\u5668\u8fde\u63a5\u5230[{0}]\u7684\u5957\u63a5\u5b57\u3002
ascanbeta.insecurehttpmethod.delete.exploitable.desc = \u8be5\u65b9\u6cd5\u6700\u5e38\u7528\u4e8e REST \u670d\u52a1\u4e2d\uff0c\u7528\u4e8e\u5220\u9664\u8d44\u6e90\u3002
ascanbeta.insecurehttpmethod.delete.exploitable.extrainfo = \u8bf7\u53c2\u9605\u5173\u4e8e stackexchange \u7684\u8ba8\u8bba\uff1ahttps\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods\uff0c\u4e86\u89e3 REST \u64cd\u4f5c\u8bf7\u53c2\u9605 http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.desc = \u5728Web\u670d\u52a1\u5668\u4e0a\u4e3a\u6b64\u8d44\u6e90\u542f\u7528\u4e86\u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5[{0}]\u3002\u6839\u636eWeb\u670d\u52a1\u5668\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u4ee5\u53ca\u8d1f\u8d23\u670d\u52a1\u6b64\u8d44\u6e90\u7684\u5e95\u5c42\u5b9e\u73b0\u7684\u4e0d\u540c\uff0c\u8fd9\u6837\u505a\u6216\u8bb8\u53ef\u88ab\u5229\u7528\uff0c\u4e5f\u6216\u8bb8\u4e0d\u53ef\u88ab\u5229\u7528\u3002\u653b\u51fb\u8005\u53ef\u80fd\u5229\u7528\u201c\u8ddf\u8e2a\u548c\u8ffd\u8e2a\u201d\u65b9\u6cd5\u6765\u83b7\u5f97\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u7684\u6388\u6743\u4ee4\u724c/\u4f1a\u8bddcookie\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5373\u4f7f\u4f1a\u8bddcookie\u5df2\u4f7f\u7528\u201cHttpOnly\u201d\u6807\u8bb0\u8fdb\u884c\u4fdd\u62a4\u3002\u653b\u51fb\u82e5\u8981\u6210\u529f\uff0c\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u901a\u5e38\u5fc5\u987b\u4f7f\u7528\u8f83\u65e7\u7684\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u6216\u4f7f\u7528\u5177\u6709\u540c\u6e90\u7b56\u7565\uff08SOP\uff09\u7ed5\u8fc7\u6f0f\u6d1e\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u201cCONNECT\u201d\u65b9\u6cd5\u4e3a\u7b2c\u4e09\u65b9\u7f51\u7ad9\u6216\u670d\u52a1\u521b\u5efa\u4e00\u4e2aHTTP\u96a7\u9053\u3002
ascanbeta.insecurehttpmethod.detailed.name = \u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5\uff1a{0}
ascanbeta.insecurehttpmethod.extrainfo = OPTIONS \u65b9\u6cd5\u6cc4\u6f0f\u4e86\u6b64\u8d44\u6e90\u7684\u4ee5\u4e0b\u5df2\u542f\u7528\u7684 HTTP \u65b9\u6cd5\uff1a[{0}]
ascanbeta.insecurehttpmethod.insecure = \u4e0d\u5b89\u5168 HTTP \u65b9\u6cd5\u7684\u54cd\u5e94\u4ee3\u7801 {0}
ascanbeta.insecurehttpmethod.name = \u4e0d\u5b89\u5168 HTTP \u65b9\u6cd5
ascanbeta.insecurehttpmethod.options.exploitable.desc = \u8fd9\u662f\u4e00\u79cd\u8bca\u65ad\u65b9\u6cd5\uff0c\u5207\u52ff\u5728\u751f\u4ea7\u6a21\u5f0f\u4e0b\u6253\u5f00\u3002
ascanbeta.insecurehttpmethod.options.exploitable.extrainfo = \u8bf7\u53c2\u9605 stackexchange \u4e0a\u7684\u8ba8\u8bba\uff1ahttps\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods
ascanbeta.insecurehttpmethod.patch.exploitable.desc = \u8fd9\u79cd\u65b9\u6cd5\u73b0\u5728\u6700\u5e38\u7528\u4e8e REST \u670d\u52a1\u4e2d\uff0cPATCH \u7528\u4e8e**\u4fee\u6539**\u529f\u80fd\u3002 PATCH \u8bf7\u6c42\u53ea\u9700\u8981\u5305\u542b\u5bf9\u8d44\u6e90\u7684\u66f4\u6539\uff0c\u800c\u4e0d\u662f\u5b8c\u6574\u7684\u8d44\u6e90\u3002
ascanbeta.insecurehttpmethod.patch.exploitable.extrainfo = \u8bf7\u53c2\u9605\u5173\u4e8e stackexchange \u7684\u8ba8\u8bba\uff1ahttps\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods\uff0c\u4e86\u89e3 REST \u64cd\u4f5c\u8bf7\u53c2\u9605 http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.potentiallyinsecure = \u53ef\u80fd\u4e0d\u5b89\u5168\u7684 HTTP \u65b9\u6cd5\u7684\u54cd\u5e94\u4ee3\u7801 {0}
ascanbeta.insecurehttpmethod.put.exploitable.desc = \u8be5\u65b9\u6cd5\u6700\u521d\u662f\u7528\u4e8e\u6587\u4ef6\u7ba1\u7406\u64cd\u4f5c\u3002 \u5b83\u73b0\u5728\u6700\u5e38\u7528\u4e8e REST \u670d\u52a1\uff0cPUT \u6700\u5e38\u7528\u4e8e**\u66f4\u65b0**\u529f\u80fd\uff0cPUT \u5230\u5df2\u77e5\u8d44\u6e90 URI\uff0c\u8bf7\u6c42\u6b63\u6587\u5305\u542b\u539f\u59cb\u8d44\u6e90\u7684\u65b0\u66f4\u65b0\u8868\u793a\u5f62\u5f0f\u3002
ascanbeta.insecurehttpmethod.put.exploitable.extrainfo = \u8bf7\u53c2\u9605\u5173\u4e8e stackexchange \u7684\u8ba8\u8bba\uff1ahttps\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods\uff0c\u4e86\u89e3 REST \u64cd\u4f5c\u8bf7\u53c2\u9605 http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.soln = \u505c\u7528\u4e0d\u5b89\u5168\u7684web\u670d\u52a1\u5668\u8ddf\u8e2a\u548c\u8fde\u63a5\u7b49\u65b9\u6cd5\uff0c\u5e76\u786e\u4fdd\u5b9e\u73b0\u57fa\u7840\u670d\u52a1\u65f6\u4e0d\u652f\u6301\u4e0d\u5b89\u5168\u7684\u65b9\u6cd5\u3002
ascanbeta.insecurehttpmethod.trace.exploitable.desc = \u5411\u6b64\u8d44\u6e90\u542f\u7528\u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5[{0}]\uff0c\u8fd9\u662f\u53ef\u88ab\u5229\u7528\u7684\u3002\u653b\u51fb\u8005\u53ef\u80fd\u5229\u7528\u201c\u8ddf\u8e2a\u548c\u8ffd\u8e2a\u201d\u65b9\u6cd5\u6765\u83b7\u5f97\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u7684\u6388\u6743\u4ee4\u724c/\u4f1a\u8bddcookie\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5373\u4f7f\u4f1a\u8bddcookie\u4f7f\u7528\u4e86\u201cHttpOnly\u201d\u6807\u8bb0\u8fdb\u884c\u4fdd\u62a4\u3002\u653b\u51fb\u82e5\u8981\u6210\u529f\uff0c\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u901a\u5e38\u5fc5\u987b\u4f7f\u7528\u8f83\u65e7\u7684\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u6216\u4f7f\u7528\u5177\u6709\u540c\u6e90\u7b56\u7565\uff08SOP\uff09\u7ed5\u8fc7\u6f0f\u6d1e\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u3002
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo = \u5df2\u7ecf\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u53d1\u9001\u8ddf\u8e2a\u8bf7\u6c42\uff0c\u5e76\u5e26\u6709\u81ea\u5b9a\u4e49\u7684cookie\u503c[{0}]\u3002\u8fd9\u4e2acookie\u503c\u5728HTTP\u54cd\u5e94\u4e2d\u516c\u5f00\uff0c\u5e76\u5bf9\u8fd9\u4e2a\u6f0f\u6d1e\u8fdb\u884c\u4e86\u786e\u8ba4\u3002
ascanbeta.insecurehttpmethod.webdav.exploitable.desc = \u6b64 HTTP \u65b9\u6cd5\u662f WEBDAV \u65b9\u6cd5\uff1a{0}\u3002 \u5982\u679c\u6b64\u670d\u52a1\u5668\u4e0d\u63d0\u4f9b\u4efb\u4f55 WEBDAV \u670d\u52a1\uff0c\u5219\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u5e94\u8be5\u53ef\u7528\u3002
ascanbeta.insecurehttpmethod.webdav.exploitable.extrainfo = \u8bf7\u53c2\u9605 stackexchange \u4e0a\u7684\u8ba8\u8bba\uff1ahttps\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods

ascanbeta.integeroverflow.desc = \u5f53\u7f16\u8bd1\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u6574\u6570\u8d85\u51fa\u8303\u56f4\u9650\u5236\u5e76\u4e14\u672a\u4ece\u8f93\u5165\u6d41\u4e2d\u6b63\u786e\u68c0\u67e5\u65f6\uff0c\u5b58\u5728\u6574\u6570\u6ea2\u51fa\u60c5\u51b5\u3002
ascanbeta.integeroverflow.error1 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u968f\u673a\u6574\u6570\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002
ascanbeta.integeroverflow.error2 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u96f6\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002
ascanbeta.integeroverflow.error3 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u76841\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002
ascanbeta.integeroverflow.error4 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u76849\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002
ascanbeta.integeroverflow.name = \u6574\u6570\u6ea2\u51fa\u9519\u8bef
ascanbeta.integeroverflow.refs = https\://en.wikipedia.org/wiki/Integer_overflow\nhttps\://cwe.mitre.org/data/definitions/190.html\nhttp\://projects.webappsec.org/w/page/13246946/Integer%20Overflows
ascanbeta.integeroverflow.soln = \u4e3a\u4e86\u9632\u6b62\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u6ea2\u51fa\u548c\u9664\u4ee50\uff08\u96f6\uff09\u9519\u8bef\uff0c\u8bf7\u91cd\u5199\u540e\u7aef\u7a0b\u5e8f\uff0c\u68c0\u67e5\u6b63\u5728\u5904\u7406\u7684\u6574\u6570\u503c\u662f\u5426\u5728\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u7684\u8303\u56f4\u5185\u3002 \u8fd9\u5c06\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u540e\u7aef\u53ef\u6267\u884c\u6587\u4ef6\u3002

ascanbeta.log4shell.cve44228.desc = pache Log4j2 <\=2.14.1 \u914d\u7f6e\u3001\u65e5\u5fd7\u6d88\u606f\u548c\u53c2\u6570\u4e2d\u4f7f\u7528\u7684 JNDI \u529f\u80fd\u4e0d\u80fd\u9632\u6b62\u653b\u51fb\u8005\u63a7\u5236 LDAP \u548c\u5176\u4ed6 JNDI \u76f8\u5173\u7aef\u70b9\u3002 \u5f53\u542f\u7528\u6d88\u606f\u67e5\u627e\u66ff\u6362\u65f6\uff0c\u53ef\u4ee5\u63a7\u5236\u65e5\u5fd7\u6d88\u606f\u6216\u65e5\u5fd7\u6d88\u606f\u53c2\u6570\u7684\u653b\u51fb\u8005\u53ef\u4ee5\u6267\u884c\u4ece LDAP \u670d\u52a1\u5668\u52a0\u8f7d\u7684\u4efb\u610f\u4ee3\u7801\u3002 \u4ece log4j 2.15.0 \u5f00\u59cb\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u7981\u7528\u6b64\u884c\u4e3a\u3002
ascanbeta.log4shell.cve44228.name = Log4Shell (CVE-2021-44228)
ascanbeta.log4shell.cve44228.refs = https\://www.lunasec.io/docs/blog/log4j-zero-day/\nhttps\://nvd.nist.gov/vuln/detail/CVE-2021-44228
ascanbeta.log4shell.cve44228.soln = \u5c06 Log4j2 \u5347\u7ea7\u5230\u7248\u672c 2.17.1 \u6216\u66f4\u65b0\u7248\u672c\u3002 \u5728\u4ee5\u524d\u7684\u7248\u672c (>2.10) \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u7cfb\u7edf\u5c5e\u6027\u201clog4j2.formatMsgNoLookups\u201d\u8bbe\u7f6e\u4e3a\u201ctrue\u201d\u6216\u4ece\u7c7b\u8def\u5f84\u4e2d\u5220\u9664 JndiLookup \u7c7b\u6765\u7f13\u89e3\u6b64\u884c\u4e3a\uff08\u4f8b\u5982\uff1azip -q -d log4j-core-*.jar org /apache/logging/log4j/core/lookup/JndiLookup.class\uff09\u3002 Java 8u121\uff08\u8bf7\u53c2\u9605 https\://www.oracle.com/java/technologies/javase/8u121-relnotes.html\uff09\u901a\u8fc7\u9ed8\u8ba4\u201ccom.sun.jndi.rmi.object.trustURLCodebase\u201d\u548c\u201ccom.sun.jndi.rmi.object.trustURLCodebase\u201d\u6765\u9632\u6b62\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u3002 sun.jndi.cosnaming.object.trustURLCodebase\u201d\u4e3a\u201cfalse\u201d\u3002
ascanbeta.log4shell.cve45046.desc = \u6211\u4eec\u53d1\u73b0 Apache Log4j 2.15.0 \u4e2d\u5bf9 CVE-2021-44228 \u7684\u4fee\u590d\u5728\u67d0\u4e9b\u975e\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u4e0d\u5b8c\u6574\u3002 \u8fd9\u53ef\u80fd\u5141\u8bb8\u653b\u51fb\u8005\u4f7f\u7528 JNDI \u67e5\u627e\u6a21\u5f0f\u5236\u4f5c\u6076\u610f\u8f93\u5165\u6570\u636e\uff0c\u4ece\u800c\u5728\u67d0\u4e9b\u73af\u5883\u4e2d\u5bfc\u81f4\u4fe1\u606f\u6cc4\u6f0f\u548c\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u3002
ascanbeta.log4shell.cve45046.name = Log4Shell (CVE-2021-45046)
ascanbeta.log4shell.cve45046.refs = https\://www.lunasec.io/docs/blog/log4j-zero-day/\nhttps\://nvd.nist.gov/vuln/detail/CVE-2021-45046
ascanbeta.log4shell.cve45046.soln = \u5c06 Log4j2 \u5347\u7ea7\u5230\u7248\u672c 2.17.1 \u6216\u66f4\u65b0\u7248\u672c\u3002
ascanbeta.log4shell.name = Log4Shell
ascanbeta.log4shell.skipped = \u672a\u9009\u62e9\u4e3b\u52a8\u626b\u63cf OAST \u670d\u52a1\u3002

ascanbeta.name = \u4e3b\u52a8\u626b\u63cf\u89c4\u5219 - Beta\u7248

ascanbeta.noanticsrftokens.desc = \u5728\u63d0\u4ea4\u7684HTML\u8868\u5355\u4e2d\u4e2d\u627e\u4e0d\u5230\u53cdCSRF\u4ee4\u724c\u3002
ascanbeta.noanticsrftokens.name = \u7f3a\u5c11\u53cdCSRF\u4ee4\u724c

ascanbeta.oobxss.name = \u5e26\u5916 XSS
ascanbeta.oobxss.skipped = \u672a\u9009\u62e9\u4e3b\u52a8\u626b\u63cf OAST \u670d\u52a1\u3002

ascanbeta.proxydisclosure.attack = \u5e26\u6709\u201cMax-Forwards\u201d\u6807\u5934\u7684 TRACE\u3001OPTIONS \u65b9\u6cd5\u3002 TRACK \u65b9\u6cd5\u3002
ascanbeta.proxydisclosure.desc = {0} \u4e2a\u4ee3\u7406\u670d\u52a1\u5668\u88ab\u68c0\u6d4b\u5230\u6216\u6307\u7eb9\u8bc6\u522b\u3002 \u6b64\u4fe1\u606f\u6709\u52a9\u4e8e\u6f5c\u5728\u7684\u653b\u51fb\u8005\u786e\u5b9a\n  - \u9488\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u653b\u51fb\u76ee\u6807\u5217\u8868\u3002\n  - \u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\u7684\u4ee3\u7406\u670d\u52a1\u5668\u4e0a\u7684\u6f5c\u5728\u6f0f\u6d1e\u3002\n  - \u662f\u5426\u5b58\u5728\u4efb\u4f55\u53ef\u80fd\u5bfc\u81f4\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u653b\u51fb\u88ab\u68c0\u6d4b\u3001\u963b\u6b62\u6216\u51cf\u8f7b\u7684\u57fa\u4e8e\u4ee3\u7406\u7684\u7ec4\u4ef6\u3002
ascanbeta.proxydisclosure.extrainfo.proxyserver = - {0}
ascanbeta.proxydisclosure.extrainfo.proxyserver.header = \u4f7f\u7528 TRACE\u3001OPTIONS \u548c TRACK \u65b9\u6cd5\uff0c\u5df2\u5728 OWASP ZAP \u548c\u5e94\u7528\u7a0b\u5e8f/Web \u670d\u52a1\u5668\u4e4b\u95f4\u8bc6\u522b\u51fa\u4ee5\u4e0b\u4ee3\u7406\u670d\u52a1\u5668\uff1a
ascanbeta.proxydisclosure.extrainfo.silentproxyserver = - {0}
ascanbeta.proxydisclosure.extrainfo.silentproxyserver.header = The following 'silent' proxy servers were identified. Due to their behaviour, it is not known at which point in the network topology these proxy servers reside\:
ascanbeta.proxydisclosure.extrainfo.traceenabled = The 'TRACE' method is enabled on one or more of the proxy servers, or on the origin server. This method leaks all information submitted from the web browser and proxies back to the user agent. This may facilitate 'Cross Site Tracing' attacks. 
ascanbeta.proxydisclosure.extrainfo.unknown = \u672a\u77e5
ascanbeta.proxydisclosure.extrainfo.webserver = - {0}
ascanbeta.proxydisclosure.extrainfo.webserver.header = \u4ee5\u4e0b\u7f51\u7ad9/\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u5df2\u88ab\u8bc6\u522b\uff1a 
ascanbeta.proxydisclosure.name = \u4ee3\u7406\u62ab\u9732
ascanbeta.proxydisclosure.refs = https\://tools.ietf.org/html/rfc7231\#section-5.1.2
ascanbeta.proxydisclosure.soln = Disable the 'TRACE' method on the proxy servers, as well as the origin web/application server.\nDisable the 'OPTIONS' method on the proxy servers, as well as the origin web/application server, if it is not required for other purposes, such as 'CORS' (Cross Origin Resource Sharing).\nConfigure the web and application servers with custom error pages, to prevent 'fingerprintable' product-specific error pages being leaked to the user in the event of HTTP errors, such as 'TRACK' requests for non-existent pages.\nConfigure all proxies, application servers, and web servers to prevent disclosure of the technology and version information in the 'Server' and 'X-Powered-By' HTTP response headers.\n

ascanbeta.relativepathconfusion.desc = The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct "relative path" for the URL. Resources (CSS, images, etc.) are also specified in the page response using relative, rather than absolute URLs. In an attack, if the web browser parses the "cross-content" response in a permissive manner, or can be tricked into permissively parsing the "cross-content" response, using techniques such as framing, then the web browser may be fooled into interpreting HTML as CSS (or other content types), leading to an XSS vulnerability.
ascanbeta.relativepathconfusion.extrainfo.contenttypeenabled = A Content Type of "{0}" was specified. If the web browser is employing strict parsing rules, this will prevent cross-content attacks from succeeding. Quirks Mode in the web browser would disable strict parsing.  
ascanbeta.relativepathconfusion.extrainfo.framingallowed = No X-Frame-Options header was specified, so the page can be framed, and this can be used to enable Quirks Mode, allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.morethanonebasetag = More than one <base> tag was specified in the HTML <head> tag to define the location for relative URLs, which is not valid.
ascanbeta.relativepathconfusion.extrainfo.nobasetag = No <base> tag was specified in the HTML <head> tag to define the location for relative URLs.
ascanbeta.relativepathconfusion.extrainfo.nocontenttype = No Content Type was specified, so Quirks Mode is not required to exploit the vulnerability in the web browser. 
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledexplicitly = Quirks Mode is explicitly enabled via <meta http-equiv\="{0}", allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitly = Quirks Mode is implicitly enabled via the use of an old DOCTYPE with PUBLIC id "{0}", allowing the specified Content Type to be bypassed in some web browsers.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitlynodoctype = Quirks Mode is implicitly enabled via the absence of a DOCTYPE, allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.name = \u76f8\u5bf9\u8def\u5f84\u6df7\u4e71
ascanbeta.relativepathconfusion.refs = http\://www.thespanner.co.uk/2014/03/21/rpo/\nhttps\://hsivonen.fi/doctype/\nhttp\://www.w3schools.com/tags/tag_base.asp
ascanbeta.relativepathconfusion.soln = Web servers and frameworks should be updated to be configured to not serve responses to ambiguous URLs in such a way that the relative path of such URLs could be mis-interpreted by components on either the client side, or server side.\nWithin the application, the correct use of the "<base>" HTML tag in the HTTP response will unambiguously specify the base URL for all relative URLs in the document.\nUse the "Content-Type" HTTP response header to make it harder for the attacker to force the web browser to mis-interpret the content type of the response.\nUse the "X-Content-Type-Options\: nosniff" HTTP response header to prevent the web browser from "sniffing" the content type of the response.\nUse a modern DOCTYPE such as "<\!doctype html>" to prevent the page from being rendered in the web browser using "Quirks Mode", since this results in the content type being ignored by the web browser.\nSpecify the "X-Frame-Options" HTTP response header to prevent Quirks Mode from being enabled in the web browser using framing attacks. 

ascanbeta.sessionfixation.alert.attack = {0} \u5b57\u6bb5\uff1a[{1}]
ascanbeta.sessionfixation.alert.cookie.extrainfo = Cookie set in response when cookie field [{0}] is set to NULL\: [{1}]\nCookie set in response with borrowed (valid) cookie value in request [{1}] \: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage = The url on which the issue was discovered was flagged as a logon page.\n\nThis issue should be manually validated by checking that the session token set on the logon page is still valid once logged in, and that the token can be used to directly access a page/resource which should require the user to be logged in.
ascanbeta.sessionfixation.alert.url.extrainfo = A likely session value has appeared in URLs in the HTML output when URL parameter/pseudo URL parameter [{0}] is set to NULL\: [{1}]\nWhen this ''borrowed'' session [{1}] is used in a subsequent request for this URL, a new session is not created.
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage = \u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionfixation.desc = \u201c\u4f1a\u8bdd\u56fa\u5b9a\u201d\u653b\u51fb\u662f\u6709\u53ef\u80fd\u53d1\u751f\u7684\u3002\u5982\u679c\u8fd9\u4e2a\u95ee\u9898\u53d1\u751f\u5728\u4e00\u4e2a\u767b\u5f55URL\u4e0a\uff08\u5728\u767b\u5f55URL\u4e0a\u7528\u6237\u81ea\u5df1\u9a8c\u8bc1\u81ea\u5df1\u5728\u5e94\u7528\u7a0b\u5e8f\u4e0a\u7684\u8eab\u4efd\uff09\uff0c\u90a3\u4e48\u653b\u51fb\u8005\u5c31\u53ef\u80fd\u5c06\u8fd9\u4e2aURL\u8fde\u540c\u4e00\u4e2a\u56fa\u5b9a\u4f1a\u8bddID\u4e00\u540c\u53d1\u7ed9\u53d7\u5bb3\u8005\uff0c\u4ee5\u4fbf\u7a0d\u540e\u7528\u8fd9\u4e2a\u7ed9\u5b9a\u7684\u4f1a\u8bddID\u6765\u5047\u88c5\u53d7\u5bb3\u8005\u7684\u8eab\u4efd\u3002\u5982\u679c\u8fd9\u4e2a\u95ee\u9898\u53d1\u751f\u5728\u672a\u767b\u5f55\u9875\u9762\uff0c\u90a3\u4e48URL\u548c\u56fa\u5b9a\u4f1a\u8bddID\u5c31\u53ea\u80fd\u88ab\u653b\u51fb\u8005\u7528\u4e8e\u8ffd\u8e2a\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u7684\u884c\u4e3a\u3002\u5982\u679c\u8fd9\u4e2a\u6f0f\u6d1e\u53d1\u751f\u5728cookie\u5b57\u6bb5\u6216\u8868\u5355\u5b57\u6bb5\uff08POST\u53c2\u6570\uff09\u800c\u4e0d\u662fURL\uff08GET\uff09\u53c2\u6570\u4e0a\uff0c\u90a3\u5c31\u53ef\u80fd\u9700\u8981\u66f4\u591a\u4e00\u4e9b\u5176\u4ed6\u7684\u6f0f\u6d1e\u624d\u80fd\u5728\u53d7\u5bb3\u8005\u7684\u6d4f\u89c8\u5668\u4e0a\u8bbe\u7f6ecookie\u5b57\u6bb5\uff0c\u6765\u4f7f\u5f97\u8fd9\u4e2a\u6f0f\u6d1e\u80fd\u88ab\u5229\u7528\u3002
ascanbeta.sessionfixation.name = Session Fixation
ascanbeta.sessionfixation.refs = https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication\nhttps\://owasp.org/www-community/attacks/Session_fixation\nhttp\://www.acros.si/papers/session_fixation.pdf\nhttp\://www.technicalinfo.net/papers/WebBasedSessionManagement.html
ascanbeta.sessionfixation.soln = 1) Prevent the attacker from gaining a session id by enforcing strict session ids, and by only allocating session ids upon successful authentication to the application.\n2) The server should always create a new session id upon authentication, regardless of whether a session is already in place.\n3) Bind the session id to some identifiable client attribute combination, such as IP address, SSL client certificate.\n4) Sessions, when destroyed, must be destroyed on the server, as well as on the client.\n5) Implement a logout mechanism which will destroy all previous sessions for the client.\n6) Implement absolute session timeouts.\n7)Switch from a URL based to a cookie or form based session id implementation, as the latter typically require additional vulnerabilities, in order to be exploitable by an attacker\n

ascanbeta.sessionidaccessiblebyjavascript.alert.attack = {0} \u5b57\u6bb5\uff1a[{1}]
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo = \u53ef\u4ee5\u4f7f\u7528\u7f51\u9875\u6d4f\u89c8\u5668\u7684JavaScript\u6765\u8bbf\u95ee\u4f1a\u8bdd\u6807\u8bc6\u7b26{0}\u5b57\u6bb5[{1}]\u3001\u503c[{2}]
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage = \u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionidaccessiblebyjavascript.desc = \u670d\u52a1\u5668\u53d1\u9001\u7684\u4f1a\u8bddID cookie\uff08\u901a\u8fc7\u5c06\u547d\u540d\u53c2\u6570\u5b57\u6bb5\u8bbe\u7f6e\u4e3aNULL\u6765\u4fee\u6539URL\u65f6\uff09\u53ef\u80fd\u88ab\u5ba2\u6237\u7aef\u4e0a\u7684JavaScript\u8bbf\u95ee\u3002\u82e5\u7ed3\u5408\u53e6\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u8fd9\u5c06\u6709\u673a\u4f1a\u9020\u6210\u4f1a\u8bdd\u88ab\u52ab\u6301\u3002  
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name = Session ID Cookie Accessible to JavaScript
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=
ascanbeta.sessionidaccessiblebyjavascript.soln = 1) Use the 'httponly' flag when setting a cookie containing a session id, to prevent it from being accessed by JavaScript in the web browser.  

ascanbeta.sessionidexpiry.alert.attack = {0} \u5b57\u6bb5\uff1a[{1}]
ascanbeta.sessionidexpiry.alert.extrainfo = \u53ef\u4ee5\u8bbf\u95ee\u4f1a\u8bdd\u6807\u8bc6\u7b26{0}\u5b57\u6bb5[{1}]\u3001\u503c[{2}]\uff0c\u76f4\u5230[{3}]\u65f6\uff08\u56e0\u4e3a\u5728{4}\u6536\u5230cookie\uff09\uff0c\u9664\u975e\u4f1a\u8bdd\u88ab\u9500\u6bc1\u3002
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage = \u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionidexpiry.browserclose = browser close
ascanbeta.sessionidexpiry.desc = \u670d\u52a1\u5668\u53d1\u9001\u7684\u4f1a\u8bddID cookie\uff08\u901a\u8fc7\u5c06\u547d\u540d\u53c2\u6570\u5b57\u6bb5\u8bbe\u7f6e\u4e3aNULL\u6765\u4fee\u6539URL\u65f6\uff09\u88ab\u8bbe\u7f6e\u4e3a\u5728\u4e00\u6bb5\u8fc7\u957f\u65f6\u95f4\u5185\u6709\u6548\u3002\u5982\u679c\u7528\u6237\u5fd8\u8bb0\u6ce8\u9500\uff0c\u6216\u6ce8\u9500\u529f\u80fd\u6ca1\u80fd\u6b63\u786e\u5730\u9500\u6bc1\u4f1a\u8bdd\uff0c\u53c8\u6216\u8005\u4f1a\u8bddID\u901a\u8fc7\u67d0\u4e9b\u5176\u4ed6\u65b9\u6cd5\u6cc4\u9732\uff0c\u90a3\u4e48\u653b\u51fb\u8005\u5c31\u53ef\u80fd\u5229\u7528\u8fd9\u4e00\u70b9\u3002     
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name = Session ID Expiry Time/Max-Age is Excessive
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=
ascanbeta.sessionidexpiry.soln = 1\uff09\u5728\u8bbe\u7f6e\u5305\u542b\u4f1a\u8bddID\u7684cookie\u65f6\uff0c\u4f7f\u7528\u201cExpire\u201d\u6216\u201cMax-Age\u201dcookie\u6307\u4ee4\uff0c\u6765\u907f\u514d\u5b83\u5728\u8fc7\u957f\u65f6\u95f4\u5185\u53ef\u7528\u3002\n2\uff09\u786e\u4fdd\u6ce8\u9500\u529f\u80fd\u5b58\u5728\uff0c\u5e76\u786e\u4fdd\u5b83\u80fd\u6b63\u786e\u5730\u9500\u6bc1\u4f1a\u8bdd\u3002\n3\uff09\u4f7f\u7528\u5176\u4ed6\u9884\u9632\u63aa\u65bd\u6765\u786e\u4fdd\u5373\u4f7f\u4f1a\u8bddID\u88ab\u6cc4\u9732\uff0c\u4e5f\u4e0d\u80fd\u88ab\u5229\u7528\u3002
ascanbeta.sessionidexpiry.timeexpired = Expired
ascanbeta.sessionidexpiry.timelessthanonehour = \u5c0f\u4e8e1\u5c0f\u65f6
ascanbeta.sessionidexpiry.timemorethanoneday = \u8d85\u8fc71\u5929
ascanbeta.sessionidexpiry.timemorethanonehour = \u8d85\u8fc71\u5c0f\u65f6
ascanbeta.sessionidexpiry.timemorethanoneweek = \u8d85\u8fc71\u661f\u671f

ascanbeta.sessionidexposedinurl.alert.attack = {0}\u5b57\u6bb5\uff1a[{1}]
ascanbeta.sessionidexposedinurl.alert.extrainfo = {0}\u5b57\u6bb5[{1}]\u542b\u6709\u4e00\u4e2a\u516c\u5f00\u7684\u4f1a\u8bdd\u6807\u8bc6\u7b26[{2}]
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage = \u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionidexposedinurl.desc = A session id is exposed in the URL. By sharing such a website URL (containing the session id), a naive user may be inadvertently granting access to their data, compromising its confidentiality, integrity, and availability.  URLs containing the session identifier also appear in web browser bookmarks, web server log files, and proxy server log files. 
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name = Exposed Session ID
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs = https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidexposedinurl.soln = \u4f7f\u7528\u4e00\u79cd\u66f4\u4e3a\u5b89\u5168\u7684\u4f1a\u8bdd\u7ba1\u7406\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4f8b\u5982\u4f7f\u7528\u4f1a\u8bddcookie\u8fd9\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5c31\u4e0d\u90a3\u4e48\u5bb9\u6613\u5728\u65e0\u610f\u95f4\u5206\u4eab\u4e86\u4f1a\u8bdd\u6807\u8bc6\u7b26\uff0c\u4e5f\u4e0d\u4f1a\u5728\u670d\u52a1\u5668\u65e5\u5fd7\u6587\u4ef6\u6216\u7f51\u9875\u6d4f\u89c8\u5668\u4e66\u7b7e\u91cc\u51fa\u73b0\u4f1a\u8bdd\u6807\u8bc6\u7b26\u3002

ascanbeta.sessionidsentinsecurely.alert.attack = {0} \u5b57\u6bb5\uff1a[{1}]
ascanbeta.sessionidsentinsecurely.alert.extrainfo = \u53ef\u80fd\u901a\u8fc7\u4e0d\u5b89\u5168\u7684\u673a\u5236\u6765\u53d1\u9001\u4f1a\u8bdd\u6807\u8bc6\u7b26{0}\u5b57\u6bb5[{1}]\u3001\u503c[{2}]\u3002  
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage = \u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u5df2\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u9762\u3002
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset = \u5728\u7531\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u4f1a\u8bddcookie\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u201c\u5b89\u5168\u201d\u6807\u5fd7\u3002
ascanbeta.sessionidsentinsecurely.desc = \u6709\u53ef\u80fd\u7ecf\u7531\u4e0d\u5b89\u5168\u7684\u673a\u5236\u5c06\u4f1a\u8bddID\u53d1\u9001\u51fa\u53bb\u3002\u5728\u8bf7\u6c42\u4e2d\u53d1\u9001cookie\u65f6\uff0c\u82e5\u4f7f\u7528\u7684\u662fHTTP\u800c\u4e0d\u662fHTTPS\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u5f53\u670d\u52a1\u5668\u6839\u636e\u54cd\u5e94\u53d1\u9001cookie\u65f6\uff08\u5728\u901a\u8fc7\u5c06\u547d\u540d\u53c2\u6570\u5b57\u6bb5\u8bbe\u7f6e\u4e3aNULL\u6765\u4fee\u6539URL\u65f6\uff09\uff0c\u6ca1\u6709\u8bbe\u7f6e\u201c\u5b89\u5168\u201d\u6807\u5fd7\uff0c\u5c31\u4f1a\u5141\u8bb8cookie\u5728\u8fc7\u540e\u901a\u8fc7HTTP\u800c\u4e0d\u662fHTTPS\u6765\u53d1\u9001\u51fa\u53bb\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u7f51\u7edc\u8def\u5f84\u4e0a\u7684\u4e00\u540d\u88ab\u52a8\u7a83\u542c\u8005\u5c31\u6709\u53ef\u80fd\u83b7\u53d6\u8bbf\u95ee\u53d7\u5bb3\u8005\u7684\u4f1a\u8bdd\u7684\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\u3002  
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name = \u6240\u4f20\u8f93\u7684\u4f1a\u8bddID\u4e0d\u5b89\u5168
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs = https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidsentinsecurely.soln = 1) Use the latest available version of SSL/TLS (for HTTPS) for all pages where a session id is communicated between the browser and the web server.\n2) Do not allow the communication to be forced down to the unencrypted HTTP protocol.\n3) Use the 'secure' flag when setting a cookie containing a session id, to prevent its subsequent transmission by an insecure mechanism.\n4) Forward non-secure HTTP page requests to the secure HTTPS equivalent page.  

ascanbeta.shellshock.desc = The server is running a version of the Bash shell that allows remote attackers to execute arbitrary code 
ascanbeta.shellshock.extrainfo = From CVE-2014-6271\: GNU Bash through 4.3 processes trailing strings after function definitions in the values of environment variables, which allows remote attackers to execute arbitrary code via a crafted environment, as demonstrated by vectors involving the ForceCommand feature in OpenSSH sshd, the mod_cgi and mod_cgid modules in the Apache HTTP Server, scripts executed by unspecified DHCP clients, and other situations in which setting the environment occurs across a privilege boundary from Bash execution, aka "ShellShock." NOTE\: the original fix for this issue was incorrect; CVE-2014-7169 has been assigned to cover the vulnerability that is still present after the incorrect fix.
ascanbeta.shellshock.name = Remote Code Execution - Shell Shock
ascanbeta.shellshock.ref = http\://web.nvd.nist.gov/view/vuln/detail?vulnId\=CVE-2014-6271\nhttp\://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html
ascanbeta.shellshock.soln = Update Bash on the server to the latest version
ascanbeta.shellshock.timingbased.evidence = Using the attack, a delay of [{0}] milliseconds was induced and detected

ascanbeta.sourcecodedisclosure.desc = \u5f53\u524d\u9875\u9762\u7684\u6765\u6e90\u4ee3\u7801\u88abWeb\u670d\u52a1\u5668\u62ab\u9732
ascanbeta.sourcecodedisclosure.gitbased.evidence = The source code for [{0}] was extracted using [{1}]
ascanbeta.sourcecodedisclosure.gitbased.extrainfo=
ascanbeta.sourcecodedisclosure.gitbased.name = Git - \u6e90\u4ee3\u7801\u6cc4\u9732 
ascanbeta.sourcecodedisclosure.gitbased.soln = Ensure that Git metadata files are not deployed to the web server or application server
ascanbeta.sourcecodedisclosure.lfibased.evidence=
ascanbeta.sourcecodedisclosure.lfibased.extrainfo = The output for the source code filename [{0}] differs sufficiently from that of the random parameter [{1}], at [{2}%], compared to a threshold of [{3}%]
ascanbeta.sourcecodedisclosure.lfibased.name = \u6e90\u4ee3\u7801\u6cc4\u6f0f - \u6587\u4ef6\u5305\u542b
ascanbeta.sourcecodedisclosure.lfibased.soln = Ensure that arbitrary files specified by the user are not included in the output
ascanbeta.sourcecodedisclosure.svnbased.extrainfo = The source code for [{0}] was found at [{1}]
ascanbeta.sourcecodedisclosure.svnbased.name = \u6e90\u4ee3\u7801\u6cc4\u9732 - SVN 
ascanbeta.sourcecodedisclosure.svnbased.soln = Ensure that SVN metadata files are not deployed to the web server or application server

ascanbeta.sourcecodedisclosurecve-2012-1823.desc = \u67d0\u4e9b PHP \u7248\u672c\u5728\u914d\u7f6e\u4e3a\u4f7f\u7528 CGI \u8fd0\u884c\u65f6\uff0c\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u7f3a\u5c11\u672a\u8f6c\u4e49\u201c\=\u201d\u5b57\u7b26\u7684\u67e5\u8be2\u5b57\u7b26\u4e32\uff0c\u4ece\u800c\u5bfc\u81f4 PHP \u6e90\u4ee3\u7801\u6cc4\u9732\u548c\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPHP \u6587\u4ef6\u7684\u5185\u5bb9\u76f4\u63a5\u63d0\u4f9b\u7ed9 Web \u6d4f\u89c8\u5668\u3002 \u6b64\u8f93\u51fa\u901a\u5e38\u5305\u542b PHP\uff0c\u4f46\u4e5f\u53ef\u80fd\u5305\u542b\u7eaf HTML\u3002
ascanbeta.sourcecodedisclosurecve-2012-1823.name = \u6e90\u4ee3\u7801\u6cc4\u9732 - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.soln = \u5347\u7ea7\u5230PHP\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c\uff0c\u6216\u4f7f\u7528Apache Web\u670d\u52a1\u5668\u548cmod_rewrite\u6a21\u5757\uff0c\u7528\u201cRewriteCond\u201d\u548c\u201cRewriteRule\u201d\u6307\u4ee4\u6765\u8fc7\u6ee4\u6389\u6076\u610f\u8bf7\u6c42\u3002

ascanbeta.spring4shell.desc = The application appears to be vulnerable to CVE-2022-22965 (otherwise known as Spring4Shell) - remote code execution (RCE) via data binding.
ascanbeta.spring4shell.name = Spring4Shell
ascanbeta.spring4shell.refs = https\://nvd.nist.gov/vuln/detail/CVE-2022-22965\nhttps\://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/\nhttps\://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\#vulnerability\nhttps\://tanzu.vmware.com/security/cve-2022-22965
ascanbeta.spring4shell.soln = Upgrade Spring Framework to versions 5.3.18, 5.2.20, or newer.

ascanbeta.springactuator.desc = Spring Actuator for Health is enabled and may reveal sensitive information about this application. Spring Actuators can be used for real monitoring purposes, but should be used with caution as to not expose too much information about the application or the infrastructure running it.
ascanbeta.springactuator.name = Spring Actuator Information Leak
ascanbeta.springactuator.refs = https\://docs.spring.io/spring-boot/docs/current/actuator-api/htmlsingle/\#overview
ascanbeta.springactuator.soln = Disable the Health Actuators and other actuators, or restrict them to administrative users.

ascanbeta.ssti.alert.otherinfo = Proof found at [{0}] \ncontent\:\n[{1}]
ascanbeta.ssti.desc = When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.
ascanbeta.ssti.name = \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165
ascanbeta.ssti.refs = https\://portswigger.net/blog/server-side-template-injection
ascanbeta.ssti.soln = Instead of inserting the user input in the template, use it as rendering argument.

ascanbeta.sstiblind.alert.recvdcallback.otherinfo = Received callback from the server.
ascanbeta.sstiblind.desc = When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.
ascanbeta.sstiblind.name = \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165\uff08\u76f2\u6ce8\uff09
ascanbeta.sstiblind.refs = https\://portswigger.net/blog/server-side-template-injection
ascanbeta.sstiblind.soln = Instead of inserting the user input in the template, use it as rendering argument.

ascanbeta.usernameenumeration.alert.attack = Manipulate [{0}] field\: [{1}] and monitor the output 
ascanbeta.usernameenumeration.alert.extrainfo = [{0}] parameter [{1}] leaks information on whether a user exists. The [{5}] differences in output, for the valid original username value [{2}], and invalid username value [{3}] are\:\n[{4}]
ascanbeta.usernameenumeration.desc = It may be possible to enumerate usernames, based on differing HTTP responses when valid and invalid usernames are provided. This would greatly increase the probability of success of password brute-forcing attacks against the system. Note that false positives may sometimes be minimised by increasing the 'Attack Strength' Option in ZAP.  Please manually check the 'Other Info' field to confirm if this is actually an issue. 
ascanbeta.usernameenumeration.name = Possible Username Enumeration
ascanbeta.usernameenumeration.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account.html\nhttp\://sebastian-schinzel.de/_download/ifip-sec2011.pdf
ascanbeta.usernameenumeration.soln = Do not divulge details of whether a username is valid or invalid. In particular, for unsuccessful login attempts, do not differentiate between an invalid user and an invalid password in the error message, page title, page contents, HTTP headers, or redirection logic.

ascanbeta.xpathinjection.name = XPath \u6ce8\u5165
