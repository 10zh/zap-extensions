graphql.api.action.importFile = Импортирует GraphQL схему из файла. 
graphql.api.action.importFile.param.file = файл, содержащий GraphQL схему.
graphql.api.action.importFile.param.endurl = URL-адрес конечной точки. 
graphql.api.action.importUrl = Импортирует GraphQL схему из URL
graphql.api.action.importUrl.param.url = URL локация GraphQL схемы
graphql.api.action.importUrl.param.endurl = URL-адрес конечной точки. 
graphql.api.action.setOptionArgsType = Устанавливает, как аргументы указаны. 
graphql.api.action.setOptionArgsType.param.String = Can be "INLINE", "VARIABLES", or "BOTH".
graphql.api.action.setOptionLenientMaxQueryDepthEnabled = Устанавливает, требуется ли максимальная глубина запроса (Query Depth) применятся снисходительно.
graphql.api.action.setOptionLenientMaxQueryDepthEnabled.param.Boolean = Применять снисходительно (правда или ложь). 
graphql.api.action.setOptionMaxAdditionalQueryDepth = Устанавливает максимальную глубину генерации дополнительного запроса (используется, если применяется мягко). 
graphql.api.action.setOptionMaxAdditionalQueryDepth.param.Integer = Максимальная дополнительная глубина (Additional Depth).
graphql.api.action.setOptionMaxArgsDepth = Устанавливает максимальную глубину генерации аргументов.
graphql.api.action.setOptionMaxArgsDepth.param.Integer = Максимальная Глубина. 
graphql.api.action.setOptionMaxQueryDepth = Устанавливает максимальную глубину генерации запроса. 
graphql.api.action.setOptionMaxQueryDepth.param.Integer = Максимальная Глубина. 
graphql.api.action.setOptionOptionalArgsEnabled = Устанавливает, следует ли указывать необязательные аргументы. 
graphql.api.action.setOptionOptionalArgsEnabled.param.Boolean = Укажите необязательные аргументы (истина или ложь). 
graphql.api.action.setOptionQuerySplitType = Устанавливает уровень для которого создается единый запрос. 
graphql.api.action.setOptionQuerySplitType.param.String = Может быть LEAF, ROOT_FIELD или OPERATION.
graphql.api.action.setOptionRequestMethod = Устанавливает метод запроса. 
graphql.api.action.setOptionRequestMethod.param.String = Может быть «POST_JSON», «POST_GRAPHQL» или «GET». 

graphql.api.view.optionArgsType = Возвращает текущее указание аргументов. 
graphql.api.view.optionLenientMaxQueryDepthEnabled = Возвращает, включен ли минимальный максимум глубины генерации запроса. 
graphql.api.view.optionMaxAdditionalQueryDepth = Возвращает текущую максимальную глубину генерации дополнительного запроса. 
graphql.api.view.optionMaxArgsDepth = Возвращает текущую максимальную глубину генерации аргументов. 
graphql.api.view.optionMaxQueryDepth = Возвращает текущую максимальную глубину генерации запроса. 
graphql.api.view.optionOptionalArgsEnabled = Возвращает независимо от того, указаны ли в настоящее время необязательные аргументы. 
graphql.api.view.optionQuerySplitType = Возвращает текущий уровень, для которого создается один запрос. 
graphql.api.view.optionRequestMethod = Возвращает текущий метод запроса. 

graphql.automation.desc = Интеграция GraphQL Automation Framework
graphql.automation.name = GraphQL автоматизация 
graphql.automation.error = Работа graphql ошибка\: {0} 
graphql.automation.info.import.file = Задание graphql импортирует схему из файла\: {0} цель\: {1} 
graphql.automation.info.import.url = Задание graphql импортирует схему из URL\: {0} цель\: {1} 
graphql.automation.info.import.introspect = Задание graphql для импорта схемы с использованием интроспекции из\: {0} 

graphql.automation.dialog.summary = URL\: {0}, Файл\: {1}
graphql.automation.dialog.tab.params = Параметры
graphql.automation.dialog.tab.adv = Advanced ( Передовой)
graphql.automation.dialog.title = Задание GraphQL 
graphql.automation.dialog.name = Название Задания\:
graphql.automation.dialog.endpoint = Конечная точка\: 
graphql.automation.dialog.schemaurl = схема URL
graphql.automation.dialog.schemafile = схема Файл
graphql.automation.dialog.advanced = Показать дополнительные параметры\: 
graphql.automation.dialog.maxquerydepth = Максимальная Глубина Запроса \:
graphql.automation.dialog.lenientmaxquery = Разрешенная максимальная глубина запроса включена\: 
graphql.automation.dialog.maxaddquerydepth = Максимальная глубина дополнительного запроса\: 
graphql.automation.dialog.maxargsdepth = Максимальная глубина аргументов\: 
graphql.automation.dialog.optargsenabled = Включены необязательные аргументы\: 
graphql.automation.dialog.argstype = Тип аргументов\: 
graphql.automation.dialog.querysplittype = Query Split Type\:
graphql.automation.dialog.requestmethod = Request Method\:

graphql.cmdline.file.help = Imports a GraphQL Schema from a File
graphql.cmdline.url.help = Imports a GraphQL Schema from a URL
graphql.cmdline.endurl.help = Sets the Endpoint URL

graphql.desc = Allows you to inspect and attack GraphQL endpoints.
graphql.topmenu.import.importgraphql = Import a GraphQL Schema from a File
graphql.topmenu.import.importgraphql.tooltip = The file must be a formally described GraphQL schema.
graphql.topmenu.import.importremotegraphql = Import a GraphQL Schema from a URL
graphql.topmenu.import.importremotegraphql.tooltip = The URL that locates a GraphQL schema. If it is not specified, Introspection will be used.

graphql.importfromdialog.message = TO DO\: Import and Parse Schema
graphql.importfromdialog.importbutton = Импортировать
graphql.importfromdialog.pasteaction = Paste
graphql.importfromdialog.labelendpoint = Endpoint URL

graphql.importfromurldialog.title = Import a GraphQL Schema from a URL
graphql.importfromurldialog.labelurl = Schema URL (Optional)

graphql.importfromfiledialog.title = Import a GraphQL Schema from a File
graphql.importfromfiledialog.labelfile = Schema File
graphql.importfromfiledialog.choosefilebutton = Choose File

graphql.info.emptyendurl = No GraphQL URL specified.

graphql.error.importfile = An error occurred while importing from file.
graphql.error.filenotfound = Cannot find the specified file.
graphql.error.invalidurl = Please enter a valid URL.\n{0}

graphql.options.panelName = GraphQL
graphql.options.label.queryDepth = Maximum Query Depth\:
graphql.options.label.lenientMaxQueryDepthEnabled = Lenient Maximum Query Depth
graphql.options.label.additionalQueryDepth = Additional Query Depth\:
graphql.options.label.argsDepth = Maximum Arguments Depth\:
graphql.options.label.split = Generate Query For\:
graphql.options.label.requestMethod = Request Method\:
graphql.options.label.argsType = Specify Arguments\:
graphql.options.label.optionalArgsEnabled = Specify Optional Arguments

graphql.options.label.lenientMaxQueryDepthEnabled.tooltip = Prevent invalid queries by allowing additional depth for fields with no leaf types.

graphql.options.value.args.inline = Встроенный
graphql.options.value.args.variables = Using Variables
graphql.options.value.args.both = Both Ways
graphql.options.value.split.leaf = Each Leaf (Scalar or Enum)
graphql.options.value.split.rootField = Each Field of an Operation
graphql.options.value.split.operation = Each Operation
graphql.options.value.request.postJson = POST (with JSON body)
graphql.options.value.split.postGraphql = POST (with GraphQL body)
graphql.options.value.split.get = GET

graphql.script.description = Input Vectors Script for injecting inline arguments in GraphQL queries proxied through ZAP.
